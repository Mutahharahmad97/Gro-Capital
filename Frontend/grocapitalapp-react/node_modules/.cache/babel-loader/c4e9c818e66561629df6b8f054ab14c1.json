{"ast":null,"code":"var _jsxFileName = \"/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/Latest/grocapitalapp-react/src/components/Cards/NamePriceCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { validations } from \"./json/validations\";\nimport { useState, useContext } from \"react\";\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport updateKpiMetrics from \"../../services/Dashboard/updateKpiMetrics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NamePriceCard = props => {\n  _s();\n\n  const fullWidth = props.fullWidth ? 'col-12 col-sm-custom col-mb' : 'col-6 col-sm-custom col-mb';\n  const {\n    Form5\n  } = useContext(AppControlContext);\n  const [unvalidated, setUnvalidated] = useState(false);\n  const [cardData, setCardData] = useState(Form5);\n  const [currentEditableId, setCurrentEditableId] = useState(0);\n  const [errorMessage, seterrorMessage] = useState(false);\n\n  const handleInput = e => {\n    setCardData({ ...Form5,\n      [e.target.name]: e.target.value\n    });\n    const getValidation = validations.find(validation => \"Monetary Value\" === validation.name);\n\n    if (!getValidation.validationRule.test(e.target.value)) {\n      setUnvalidated(true);\n      seterrorMessage(getValidation.message);\n    } else {\n      setUnvalidated(false);\n      Form5[e.target.name] = e.target.value;\n      const kpi = updateKpiMetrics(Form5);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: fullWidth,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-box white-box--center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-box__title\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), currentEditableId === props.key ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"white-box__numbers\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: isNaN(Form5[props.name]) ? 0 : Form5[props.name],\n          name: props.name,\n          onChange: handleInput,\n          onKeyDown: e => {\n            if (e.key === \"Enter\") {\n              handleInput(e);\n              setCurrentEditableId(!currentEditableId);\n            }\n          },\n          className: \"custom-amount\",\n          style: {\n            color: \"black\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // <div className=\"white-box__numbers\">\n      //   ${Form5[props.name]}\n      // </div>\n      _jsxDEV(\"div\", {\n        className: \"white-box__numbers\",\n        children: [\"$\", isNaN(Form5[props.name]) || Form5[props.name] === '' ? 0 : Form5[props.name]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"edit_hover_class\",\n        onClick: () => {\n          props.key === currentEditableId ? setCurrentEditableId(0) : setCurrentEditableId(props.key);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: props.key === currentEditableId ? `icon-checked edit_hover_class` : `icon-edit edit_hover_class`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), unvalidated ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"has-error\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this) : false]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NamePriceCard, \"T8iS9+A1YsyVvhoZ9qvpvbvSk7w=\");\n\n_c = NamePriceCard;\nexport default NamePriceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"NamePriceCard\");","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/Latest/grocapitalapp-react/src/components/Cards/NamePriceCard.jsx"],"names":["validations","useState","useContext","AppControlContext","updateKpiMetrics","NamePriceCard","props","fullWidth","Form5","unvalidated","setUnvalidated","cardData","setCardData","currentEditableId","setCurrentEditableId","errorMessage","seterrorMessage","handleInput","e","target","name","value","getValidation","find","validation","validationRule","test","message","kpi","title","key","isNaN","color"],"mappings":"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","sourcesContent":["import { validations } from \"./json/validations\";\nimport { useState, useContext } from \"react\";\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport updateKpiMetrics from \"../../services/Dashboard/updateKpiMetrics\";\n\n\nconst NamePriceCard = (props) => {\n  const fullWidth = props.fullWidth ? 'col-12 col-sm-custom col-mb' : 'col-6 col-sm-custom col-mb'\n  const { Form5 } = useContext(AppControlContext);\n  const [unvalidated, setUnvalidated] = useState(false);\n  const [cardData, setCardData] =  useState(Form5);\n  const [currentEditableId, setCurrentEditableId] = useState(0);\n  const [errorMessage, seterrorMessage] = useState(false);\n\n  const handleInput = (e) => {\n    setCardData({\n      ...Form5,\n      [e.target.name]: e.target.value\n    });\n\n    const getValidation = validations.find(\n      (validation) => \"Monetary Value\" === validation.name\n    );\n    if (!getValidation.validationRule.test(e.target.value)) {\n        setUnvalidated(true);\n        seterrorMessage(getValidation.message)\n    } else {\n      setUnvalidated(false);\n      Form5[e.target.name] = e.target.value\n      const kpi = updateKpiMetrics(Form5);\n    }\n  };\n  return (\n    <div className={fullWidth}>\n      <div className=\"white-box white-box--center\">\n        <div className=\"white-box__title\">\n          <h2>{props.title}</h2>\n        </div>\n        {currentEditableId === props.key ? (\n          <div className=\"white-box__numbers\">\n            <input\n              value={isNaN(Form5[props.name]) ? 0 : Form5[props.name]}\n              name={props.name}\n              onChange={handleInput}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  handleInput(e);\n                  setCurrentEditableId(!currentEditableId);\n                }\n              }}\n              className=\"custom-amount\"\n              style={{ color: \"black\" }}\n            />\n          </div>\n        ):(\n          // <div className=\"white-box__numbers\">\n          //   ${Form5[props.name]}\n          // </div>\n          <div className=\"white-box__numbers\">${isNaN(Form5[props.name]) || Form5[props.name] === '' ? 0 : Form5[props.name]}</div>\n        )}\n        <span\n            className=\"edit_hover_class\"\n            onClick={() => {\n              props.key === currentEditableId\n                ? setCurrentEditableId(0)\n                : setCurrentEditableId(props.key);\n            }}\n          >\n            <i\n              className={\n                props.key === currentEditableId\n                  ? `icon-checked edit_hover_class`\n                  : `icon-edit edit_hover_class`\n              }\n            ></i>\n          </span>\n        {unvalidated ? (<span className=\"has-error\">{errorMessage}</span>):false}\n      </div>\n    </div>\n  );\n};\n\nexport default NamePriceCard;\n"]},"metadata":{},"sourceType":"module"}