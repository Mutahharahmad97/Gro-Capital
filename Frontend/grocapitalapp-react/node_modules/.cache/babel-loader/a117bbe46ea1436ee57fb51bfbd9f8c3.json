{"ast":null,"code":"import { baseUrl } from \"../util/baseUrl\";\nimport { REGISTER_URL } from '../util/urls';\n\nconst register = async data => {\n  const _firstName = data.FName.toLowerCase();\n\n  const _lastName = data.LName.toLowerCase();\n\n  const _email = data.Email.toLowerCase();\n\n  try {\n    const response = await fetch(baseUrl() + REGISTER_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        first_name: _firstName,\n        last_name: _lastName,\n        // username: data.Email.split(\"@\")[0],\n        username: _email,\n        email: _email,\n        password: data.RPassword\n      })\n    });\n\n    if (response.ok) {\n      const res = await response.json();\n      localStorage.setItem(\"token\", res.token);\n      return {\n        success: true,\n        message: \"success\",\n        userExists: false\n      };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message: error.username[0],\n        userExists: true\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return {\n      success: false,\n      message: \"API Error\",\n      userExists: false\n    };\n  }\n};\n\nexport default register;","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/Latest/grocapitalapp-react/src/services/Auth/userRegister.js"],"names":["baseUrl","REGISTER_URL","register","data","_firstName","FName","toLowerCase","_lastName","LName","_email","Email","response","fetch","method","headers","body","JSON","stringify","first_name","last_name","username","email","password","RPassword","ok","res","json","localStorage","setItem","token","success","message","userExists","error","e","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,YAAT,QAA6B,cAA7B;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAMC,UAAU,GAAID,IAAI,CAACE,KAAN,CAAaC,WAAb,EAAnB;;AACA,QAAMC,SAAS,GAAIJ,IAAI,CAACK,KAAN,CAAaF,WAAb,EAAlB;;AACA,QAAMG,MAAM,GAAIN,IAAI,CAACO,KAAN,CAAaJ,WAAb,EAAf;;AACA,MAAI;AACF,UAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACZ,OAAO,KAAKC,YAAb,EAA2B;AACrDY,MAAAA,MAAM,EAAE,MAD6C;AAErDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAF4C;AAKrDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,UAAU,EAAEd,UADO;AAEnBe,QAAAA,SAAS,EAAEZ,SAFQ;AAGnB;AACAa,QAAAA,QAAQ,EAAEX,MAJS;AAKnBY,QAAAA,KAAK,EAAEZ,MALY;AAMnBa,QAAAA,QAAQ,EAAEnB,IAAI,CAACoB;AANI,OAAf;AAL+C,KAA3B,CAA5B;;AAeA,QAAIZ,QAAQ,CAACa,EAAb,EAAiB;AACf,YAAMC,GAAG,GAAG,MAAMd,QAAQ,CAACe,IAAT,EAAlB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,GAAG,CAACI,KAAlC;AACA,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE,SAA1B;AAAqCC,QAAAA,UAAU,EAAE;AAAjD,OAAP;AACD,KAJD,MAIO;AACL,YAAMC,KAAK,GAAG,MAAMtB,QAAQ,CAACe,IAAT,EAApB;AACA,aAAO;AAAEI,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,OAAO,EAAEE,KAAK,CAACb,QAAN,CAAe,CAAf,CAA3B;AAA8CY,QAAAA,UAAU,EAAE;AAA1D,OAAP;AACD;AACF,GAxBD,CAwBE,OAAOE,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAO;AAAEJ,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE,WAA3B;AAAyCC,MAAAA,UAAU,EAAE;AAArD,KAAP;AACD;AACF,CAhCD;;AAkCA,eAAe9B,QAAf","sourcesContent":["import { baseUrl } from \"../util/baseUrl\";\nimport { REGISTER_URL } from '../util/urls'\n\nconst register = async (data) => {\n  const _firstName = (data.FName).toLowerCase();\n  const _lastName = (data.LName).toLowerCase();\n  const _email = (data.Email).toLowerCase();\n  try {\n    const response = await fetch(baseUrl() + REGISTER_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        first_name: _firstName,\n        last_name: _lastName,\n        // username: data.Email.split(\"@\")[0],\n        username: _email,\n        email: _email,\n        password: data.RPassword,\n      }),\n    });\n\n    if (response.ok) {\n      const res = await response.json();\n      localStorage.setItem(\"token\", res.token);\n      return { success: true, message: \"success\", userExists: false };\n    } else {\n      const error = await response.json();\n      return { success: false, message: error.username[0], userExists: true };\n    }\n  } catch (e) {\n    console.log(e);\n    return { success: false, message: \"API Error\",  userExists: false };\n  }\n};\n\nexport default register"]},"metadata":{},"sourceType":"module"}