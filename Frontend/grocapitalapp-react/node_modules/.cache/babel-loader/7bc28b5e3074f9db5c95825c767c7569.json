{"ast":null,"code":"var _jsxFileName = \"/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/pages/settings_page/securityPage.jsx\",\n    _s = $RefreshSig$();\n\nimport FormInput from \"../../components/Form/FormInput\";\nimport { useState } from \"react\";\nimport { baseUrl } from \"../../services/util/baseUrl\";\nimport passwordShowIcon from \"../../icons/password-show.svg\";\nimport passwordHideIcon from \"../../icons/password-hide.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SecurityPage = props => {\n  _s();\n\n  const [formValidation, setFormValidation] = useState({\n    PasswordValidate: true,\n    CPasswordValidate: true\n  });\n  const [passwordResetForm, setPasswordResetForm] = useState({\n    OldPassword: \"\",\n    NewPassword: \"\",\n    ConfirmNewPassword: \"\"\n  });\n  const [showOldPasswordState, setShowOldPasswordState] = useState(false);\n  const [showNewPasswordState, setShowNewPasswordState] = useState(false);\n  const [showConfirmPasswordState, setShowConfirmPasswordState] = useState(false);\n\n  const updateFormField = e => {\n    setPasswordResetForm({ ...passwordResetForm,\n      [e.target.name]: e.target.value\n    });\n\n    switch (e.target.name) {\n      case \"NewPassword\":\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d][A-Za-z\\d!@#$%^&*()_+]{7,}$/.test(e.target.value) && e.target.value.length > 0 ? setFormValidation({ ...formValidation,\n          PasswordValidate: true\n        }) : setFormValidation({ ...formValidation,\n          PasswordValidate: false\n        });\n        break;\n\n      case \"ConfirmNewPassword\":\n        passwordResetForm.NewPassword === e.target.value ? setFormValidation({ ...formValidation,\n          CPasswordValidate: true\n        }) : setFormValidation({ ...formValidation,\n          CPasswordValidate: false\n        });\n        break;\n\n      default: //Do nothing\n\n    }\n  };\n\n  const updatePassword = async () => {\n    if (formValidation.PasswordValidate && formValidation.CPasswordValidate) {\n      const requestData = {\n        old_password: passwordResetForm.OldPassword,\n        new_password: passwordResetForm.NewPassword\n      };\n      const response = await fetch(baseUrl() + \"auth/settings/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(requestData)\n      });\n\n      if (response.ok) {\n        return {\n          success: true,\n          message: \"success\"\n        };\n      } else if (response.status === 401) {\n        const error = await response.json();\n        return {\n          success: false,\n          message: error.detail\n        };\n      } else {\n        const error = await response.json();\n        return {\n          success: false,\n          message: '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]]\n        };\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"settings-pages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account_info_heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Security\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"account_info_form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"account_info_form__fields\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          className: \"registration\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group form-group--with-icon\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group__icon\",\n                  onClick: () => setShowOldPasswordState(!showOldPasswordState),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: showOldPasswordState ? passwordShowIcon : passwordHideIcon,\n                    alt: \"password Icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  id: \"set-old-password\",\n                  title: \"Old password\",\n                  type: \"password\",\n                  name: \"OldPassword\",\n                  onchange: updateFormField // onkeyup={updateFormFieldOnKeyUp}\n                  //   onblur={updateSsnField}\n                  ,\n                  validate: true,\n                  class: \"null\" //   message=\"The format should be xxx-xx-xxxx\"\n                  // value={`${Form.FName} ${Form.LName}`}\n                  ,\n                  value: passwordResetForm.OldPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group form-group--with-icon\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group__icon\",\n                  onClick: () => setShowNewPasswordState(!showNewPasswordState),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: showNewPasswordState ? passwordShowIcon : passwordHideIcon,\n                    alt: \"password Icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  id: \"set-new-password\",\n                  title: \"New password\",\n                  type: \"password\",\n                  name: \"NewPassword\",\n                  onchange: updateFormField //   onblur={updateTotalMonthlyIncomeField}\n                  ,\n                  validate: formValidation.PasswordValidate,\n                  message: \"Password must contain atleast 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character. Password must be atleast 8 characters long\",\n                  value: passwordResetForm.NewPassword,\n                  class: \"null\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 col-sm-6\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group form-group--with-icon\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group__icon\",\n                  onClick: () => setShowConfirmPasswordState(!showConfirmPasswordState),\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: showConfirmPasswordState ? passwordShowIcon : passwordHideIcon,\n                    alt: \"password Icon\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                  id: \"confirm-pass\",\n                  title: \"Confirm new password\",\n                  type: \"password\",\n                  name: \"ConfirmNewPassword\" //onblur={updateTotalMonthlyExpensesField}\n                  ,\n                  onchange: updateFormField,\n                  validate: formValidation.CPasswordValidate,\n                  message: \"Password doesn't match\",\n                  value: passwordResetForm.ConfirmNewPassword\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              justifyContent: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: updatePassword,\n              className: \"btn btn--green account_info_form__btn\",\n              children: \"Change password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SecurityPage, \"YPWS79nY+4QLfTJYCX2sS5DxGUI=\");\n\n_c = SecurityPage;\nexport default SecurityPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SecurityPage\");","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/pages/settings_page/securityPage.jsx"],"names":["FormInput","useState","baseUrl","SecurityPage","props","formValidation","setFormValidation","PasswordValidate","CPasswordValidate","passwordResetForm","setPasswordResetForm","OldPassword","NewPassword","ConfirmNewPassword","showOldPasswordState","setShowOldPasswordState","showNewPasswordState","setShowNewPasswordState","showConfirmPasswordState","setShowConfirmPasswordState","updateFormField","e","target","name","value","test","length","updatePassword","requestData","old_password","new_password","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","ok","success","message","status","error","json","detail","Object","keys","passwordShowIcon","passwordHideIcon","display","justifyContent"],"mappings":"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","sourcesContent":["import FormInput from \"../../components/Form/FormInput\";\nimport { useState } from \"react\";\nimport { baseUrl } from \"../../services/util/baseUrl\";\nimport passwordShowIcon from \"../../icons/password-show.svg\";\nimport passwordHideIcon from \"../../icons/password-hide.svg\";\n\nconst SecurityPage = (props) => {\n  const [formValidation, setFormValidation] = useState({\n    PasswordValidate: true,\n    CPasswordValidate: true,\n  });\n  const [passwordResetForm, setPasswordResetForm] = useState({\n    OldPassword: \"\",\n    NewPassword: \"\",\n    ConfirmNewPassword: \"\",\n  });\n\n  const [showOldPasswordState, setShowOldPasswordState] = useState(false);\n  const [showNewPasswordState, setShowNewPasswordState] = useState(false);\n  const [showConfirmPasswordState, setShowConfirmPasswordState] =\n    useState(false);\n\n  const updateFormField = (e) => {\n    setPasswordResetForm({\n      ...passwordResetForm,\n      [e.target.name]: e.target.value,\n    });\n\n    switch (e.target.name) {\n      case \"NewPassword\":\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d][A-Za-z\\d!@#$%^&*()_+]{7,}$/.test(\n          e.target.value\n        ) && e.target.value.length > 0\n          ? setFormValidation({ ...formValidation, PasswordValidate: true })\n          : setFormValidation({ ...formValidation, PasswordValidate: false });\n        break;\n\n      case \"ConfirmNewPassword\":\n        passwordResetForm.NewPassword === e.target.value\n          ? setFormValidation({ ...formValidation, CPasswordValidate: true })\n          : setFormValidation({ ...formValidation, CPasswordValidate: false });\n        break;\n\n      default:\n      //Do nothing\n    }\n  };\n  const updatePassword = async () => {\n    if (formValidation.PasswordValidate && formValidation.CPasswordValidate) {\n      const requestData = {\n        old_password: passwordResetForm.OldPassword,\n        new_password: passwordResetForm.NewPassword,\n      };\n      const response = await fetch(baseUrl() + \"auth/settings/reset-password\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        },\n        body: JSON.stringify(requestData),\n      });\n      if (response.ok) {\n        return { success: true, message: \"success\" };\n      } else if (response.status === 401) {\n        const error = await response.json();\n        return { success: false, message: error.detail };\n      } else {\n        const error = await response.json();\n        return {\n          success: false,\n          message:\n            '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]],\n        };\n      }\n    }\n  };\n\n  return (\n    <div id=\"settings-pages\">\n      <div className=\"account_info_heading\">\n        <h1>Security</h1>\n      </div>\n      <section className=\"account_info_form\">\n        <div className=\"account_info_form__fields\">\n          <form action=\"#\" className=\"registration\">\n            <div className=\"row\">\n              <div className=\"col-12 col-sm-6\">\n                <div className=\"form-group form-group--with-icon\">\n                  <div\n                    className=\"form-group__icon\"\n                    onClick={() =>\n                      setShowOldPasswordState(!showOldPasswordState)\n                    }\n                  >\n                    <img\n                      src={\n                        showOldPasswordState\n                          ? passwordShowIcon\n                          : passwordHideIcon\n                      }\n                      alt=\"password Icon\"\n                    />\n                  </div>\n                  <FormInput\n                    id=\"set-old-password\"\n                    title=\"Old password\"\n                    type=\"password\"\n                    name=\"OldPassword\"\n                    onchange={updateFormField}\n                    // onkeyup={updateFormFieldOnKeyUp}\n                    //   onblur={updateSsnField}\n                    validate={true}\n                    class=\"null\"\n                    //   message=\"The format should be xxx-xx-xxxx\"\n                    // value={`${Form.FName} ${Form.LName}`}\n                    value={passwordResetForm.OldPassword}\n                  />\n                </div>\n              </div>\n              <div className=\"col-12 col-sm-6\"></div>\n              <div className=\"col-12 col-sm-6\">\n                <div className=\"form-group form-group--with-icon\">\n                  <div\n                    className=\"form-group__icon\"\n                    onClick={() =>\n                      setShowNewPasswordState(!showNewPasswordState)\n                    }\n                  >\n                    <img\n                      src={\n                        showNewPasswordState\n                          ? passwordShowIcon\n                          : passwordHideIcon\n                      }\n                      alt=\"password Icon\"\n                    />\n                  </div>\n                  <FormInput\n                    id=\"set-new-password\"\n                    title=\"New password\"\n                    type=\"password\"\n                    name=\"NewPassword\"\n                    onchange={updateFormField}\n                    //   onblur={updateTotalMonthlyIncomeField}\n                    validate={formValidation.PasswordValidate}\n                    message=\"Password must contain atleast 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character. Password must be atleast 8 characters long\"\n                    value={passwordResetForm.NewPassword}\n                    class=\"null\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-12 col-sm-6\">\n                <div className=\"form-group form-group--with-icon\">\n                  <div\n                    className=\"form-group__icon\"\n                    onClick={() =>\n                      setShowConfirmPasswordState(!showConfirmPasswordState)\n                    }\n                  >\n                    <img\n                      src={\n                        showConfirmPasswordState\n                          ? passwordShowIcon\n                          : passwordHideIcon\n                      }\n                      alt=\"password Icon\"\n                    />\n                  </div>\n                  <FormInput\n                    id=\"confirm-pass\"\n                    title=\"Confirm new password\"\n                    type=\"password\"\n                    name=\"ConfirmNewPassword\"\n                    //onblur={updateTotalMonthlyExpensesField}\n                    onchange={updateFormField}\n                    validate={formValidation.CPasswordValidate}\n                    message=\"Password doesn't match\"\n                    value={passwordResetForm.ConfirmNewPassword}\n                  />\n                </div>\n              </div>\n            </div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <div\n                onClick={updatePassword}\n                className=\"btn btn--green account_info_form__btn\"\n              >\n                Change password\n              </div>\n            </div>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n};\nexport default SecurityPage;\n"]},"metadata":{},"sourceType":"module"}