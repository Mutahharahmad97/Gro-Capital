{"ast":null,"code":"var _jsxFileName = \"/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/pages/Dashboard/DashboardProgress.jsx\",\n    _s = $RefreshSig$();\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { progressData } from \"./util/progressData\";\nimport FireworksIcon from \"../../icons/fireworks.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardProgress = () => {\n  _s();\n\n  const [progressBarCompleted, setProgressBarCompleted] = useState(progressData[0] ? progressData[0].triggersAt : 0);\n  const [currentContent, setCurrentContent] = useState(progressData[0] && progressData[0].content ? progressData[0].content : \"\");\n  const [currentIcon, setCurrentIcon] = useState(progressData[0] && progressData[0].icon ? progressData[0].icon : {});\n  const [currentProgressIndex, setCurrentProgressIndex] = useState(0);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (progressBarCompleted < 100) {\n        if (currentProgressIndex === progressData.length - 1) {\n          setProgressBarCompleted(progressBarCompleted + 10);\n        } else {\n          if (progressBarCompleted === progressData[currentProgressIndex + 1].triggersAt) {\n            setCurrentIcon(progressData[currentProgressIndex + 1].icon);\n            setCurrentContent(progressData[currentProgressIndex + 1].content);\n            setCurrentProgressIndex(currentProgressIndex + 1);\n          }\n\n          setProgressBarCompleted(progressBarCompleted + 10);\n        }\n      }\n    }, 1000);\n    return () => clearTimeout(timer); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [progressBarCompleted]);\n\n  const renderProgressCompletePopup = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup active\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__box\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__item popup__item--sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row flex-column align-items-center justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: FireworksIcon,\n            alt: \"fireworks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"progress-complete-heading\",\n            children: \"Success!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"progress-complete-description\",\n            children: \"Your request is in the progress. Please allow 24 hours.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"notify-text\",\n            children: \"You'll be notified by email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            className: \"btn btn--green btn--full\",\n            children: \"Back to Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n\n  const renderProgressBarData = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"dashboard-page white\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"dashboard\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrap positiion_centered\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row flex-column align-items-center justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: currentIcon,\n              alt: currentContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"heading_progress\",\n              children: currentContent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row flex-column align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n              completed: progressBarCompleted,\n              bgColor: \"#FFA200\",\n              width: \"300px\",\n              isLabelVisible: false,\n              baseBgColor: \"#EDF5F5\",\n              labelColor: \"#e80909\",\n              className: \"progress-bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row flex-column align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"progress-subtitle\",\n              children: \"Please wait while we determine your \\\"Gro's Investability Rate\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: progressBarCompleted >= 100 ? renderProgressCompletePopup() : renderProgressBarData()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DashboardProgress, \"/2Y/f6MdxDYfGBYz2RD7BzI3DK8=\");\n\n_c = DashboardProgress;\nexport default DashboardProgress;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardProgress\");","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/pages/Dashboard/DashboardProgress.jsx"],"names":["ProgressBar","useState","useEffect","Link","progressData","DashboardProgress","progressBarCompleted","setProgressBarCompleted","triggersAt","currentContent","setCurrentContent","content","currentIcon","setCurrentIcon","icon","currentProgressIndex","setCurrentProgressIndex","timer","setTimeout","length","clearTimeout","renderProgressCompletePopup","FireworksIcon","renderProgressBarData"],"mappings":"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","sourcesContent":["import ProgressBar from \"@ramonak/react-progress-bar\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { progressData } from \"./util/progressData\";\nimport FireworksIcon from '../../icons/fireworks.svg';\n\nconst DashboardProgress = () => {\n  const [progressBarCompleted, setProgressBarCompleted] = useState(\n    progressData[0] ? progressData[0].triggersAt : 0\n  );\n  const [currentContent, setCurrentContent] = useState(\n    progressData[0] && progressData[0].content ? progressData[0].content : \"\"\n  );\n  const [currentIcon, setCurrentIcon] = useState(\n    progressData[0] && progressData[0].icon ? progressData[0].icon : {}\n  );\n  const [currentProgressIndex, setCurrentProgressIndex] = useState(0);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (progressBarCompleted < 100) {\n        if (currentProgressIndex === progressData.length - 1) {\n          setProgressBarCompleted(progressBarCompleted + 10);\n        } else {\n          if (\n            progressBarCompleted ===\n            progressData[currentProgressIndex + 1].triggersAt\n          ) {\n            setCurrentIcon(progressData[currentProgressIndex + 1].icon);\n            setCurrentContent(progressData[currentProgressIndex + 1].content);\n            setCurrentProgressIndex(currentProgressIndex + 1);\n          }\n          setProgressBarCompleted(progressBarCompleted + 10);\n        }\n      }\n    }, 1000);\n    return () => clearTimeout(timer);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [progressBarCompleted]);\n\n  const renderProgressCompletePopup = () => (\n    <div className=\"popup active\">\n      <div className=\"popup__box\">\n        <div className=\"popup__item popup__item--sm\">\n          <div className=\"row flex-column align-items-center justify-content-center\">\n            <img src={FireworksIcon} alt=\"fireworks\" />\n            <p className=\"progress-complete-heading\">Success!</p>\n            <p className=\"progress-complete-description\">\n              Your request is in the progress. Please allow 24 hours.\n            </p>\n            <p className=\"notify-text\">You'll be notified by email</p>\n            <Link to=\"/dashboard\" className=\"btn btn--green btn--full\">Back to Dashboard</Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const renderProgressBarData = () => (\n    <div id=\"dashboard-page white\">\n      <section className=\"dashboard\">\n        <div className=\"wrap positiion_centered\">\n          <div className=\"dashboard__content\">\n            <div className=\"row flex-column align-items-center justify-content-center\">\n              <img src={currentIcon} alt={currentContent} />\n              <h1 className=\"heading_progress\">{currentContent}</h1>\n            </div>\n            <div className=\"row flex-column align-items-center justify-content-center\">\n              <ProgressBar\n                completed={progressBarCompleted}\n                bgColor=\"#FFA200\"\n                width=\"300px\"\n                isLabelVisible={false}\n                baseBgColor=\"#EDF5F5\"\n                labelColor=\"#e80909\"\n                className=\"progress-bar\"\n              />\n            </div>\n            <div className=\"row flex-column align-items-center justify-content-center\">\n              <p className=\"progress-subtitle\">\n                Please wait while we determine your \"Gro's Investability Rate\"\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n\n  return (\n    <div>\n      {progressBarCompleted >= 100\n        ? renderProgressCompletePopup()\n        : renderProgressBarData()}\n    </div>\n  );\n};\n\nexport default DashboardProgress;\n"]},"metadata":{},"sourceType":"module"}