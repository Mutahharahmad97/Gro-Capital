{"ast":null,"code":"var _jsxFileName = \"/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/components/Cards/InformationCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { validations } from \"./json/validations\";\nimport \"./InformationCard.scss\";\nimport updateUser from \"../../services/Dashboard/updateUser\";\nimport updatePersonalInformation from \"../../services/Dashboard/updatePersonalInformation\";\nimport updateBusinessInformation from \"../../services/Dashboard/updateBusinessInformation\";\nimport ExperianScore from \"../../services/Experian/Score\";\nimport ExperianAuth from \"../../services/Experian/Auth\";\nimport updateUserProfile from \"../../services/Dashboard/updateUserProfile\";\nimport SelectSearch, { fuzzySearch } from \"react-select-search\";\nimport states from \"../Form/json/states\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InformationCard = props => {\n  _s();\n\n  const {\n    Form,\n    Form2,\n    Form3\n  } = useContext(AppControlContext);\n  const [informationData, SetInformationData] = useState({ ...Form,\n    ...Form2,\n    ...Form3,\n    DrivingLicense: \"4741121003\" // EIN: \"123456789\",\n    // Experian: \"475/800\",\n\n  });\n  const [unvalidated, setUnvalidated] = useState([]);\n  const [currentEditableId, setCurrentEditableId] = useState(0);\n  const contextMapper = props.data;\n  const [experianAuthToken, setExperianAuthToken] = useState(\"\");\n\n  const selectSearch = value => {\n    SetInformationData({ ...informationData,\n      State: value\n    });\n    let businessInfoObj = {\n      \"CorporateName\": informationData.CorporateName,\n      \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n      \"BusinessAs\": informationData.BusinessAs,\n      \"City\": informationData.City,\n      \"DUNS\": informationData.DUNS,\n      \"SicCode\": informationData.SicCode,\n      \"State\": value,\n      \"Zip\": informationData.Zip\n    };\n    const comapany = updateBusinessInformation(Form2);\n  };\n\n  const handleInput = e => {\n    SetInformationData({ ...informationData,\n      [e.target.name]: e.target.value\n    });\n    const getValidation = validations.find(validation => e.target.name === validation.name);\n\n    if (getValidation.validationRule.test(e.target.value)) {\n      if (unvalidated.includes(e.target.name)) {\n        const removeIndex = unvalidated.findIndex(current => current === e.target.name);\n        let unvalidatedTemp = [...unvalidated];\n        unvalidatedTemp.splice(removeIndex, 1);\n        setUnvalidated(unvalidatedTemp);\n      }\n\n      if (props.title === \"Personal Information\") {\n        let personalInfoObj = {\n          \"FName\": informationData.FName,\n          \"LName\": informationData.LName,\n          \"Email\": informationData.Email\n        };\n        personalInfoObj[e.target.name] = e.target.value;\n        const user = updateUser(personalInfoObj);\n        let personalData = { ...Form3\n        };\n        personalData[e.target.name] = e.target.value;\n        const personalInfo = updatePersonalInformation(personalData);\n        let userProfileObj = {\n          \"DOB\": informationData.DOB,\n          \"DrivingLicense\": informationData.DrivingLicense\n        };\n        const userProfle = updateUserProfile(userProfileObj);\n      } else if (props.title === \"Company Information\") {\n        let businessInfoObj = {\n          \"CorporateName\": informationData.CorporateName,\n          \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n          \"BusinessAs\": informationData.BusinessAs,\n          \"City\": informationData.City,\n          \"DUNS\": informationData.DUNS,\n          \"SicCode\": informationData.SicCode,\n          \"State\": informationData.State,\n          \"Zip\": informationData.Zip\n        };\n        businessInfoObj[e.target.name] = e.target.value;\n        const comapany = updateBusinessInformation(businessInfoObj);\n\n        if (e.target.name === 'DUNS') {\n          ExperianAuth().then(response => response.payload.access_token).then(authToken => setExperianAuthToken(authToken)).catch(err => console.log(err));\n          ExperianScore(e.target.value, experianAuthToken).then(response => SetInformationData({ ...informationData,\n            [e.target.name]: e.target.value,\n            Experian: response.payload ? response.payload.results.commercialScore.score + \"/800\" : \"\"\n          }, props.callback(response.payload ? response.payload.results.commercialScore.score + \"/800\" : \"\"))).catch(err => console.error(err));\n        }\n      }\n    } else {\n      if (!unvalidated.includes(e.target.name)) setUnvalidated([...unvalidated, e.target.name]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"white-box white-box--mb\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-box__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row--mb\",\n      children: contextMapper.map((currentData, index) => {\n        let getMessage;\n\n        if (unvalidated.includes(currentData.name)) {\n          getMessage = validations.find(validation => currentData.name === validation.name);\n          getMessage = getMessage.message;\n        } else getMessage = false;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${contextMapper.length % 6 === 0 && currentData.id % 3 === 0 ? \"col-12 col-sm-6 col-mb\" : \"col-12 col-sm-3 col-mb\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"white-box__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"white-box__info-txt\",\n              children: [currentEditableId === currentData.id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                value: informationData[currentData.name],\n                name: currentData.name,\n                onChange: handleInput,\n                onKeyDown: e => {\n                  if (e.key === \"Enter\") {\n                    handleInput(e);\n                    setCurrentEditableId(!currentEditableId);\n                  }\n                },\n                className: \"custom-amount\",\n                style: {\n                  color: \"black\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 21\n              }, this) : currentData.name === \"State\" ? /*#__PURE__*/_jsxDEV(SelectSearch, {\n                options: states,\n                search: true,\n                autoComplete: \"null\" // value={informationData.State}\n                ,\n                filterOptions: fuzzySearch,\n                onChange: selectSearch,\n                placeholder: informationData.State\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: informationData[currentData.name]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), currentData.name !== \"State\" && currentData.name !== \"Experian\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => {\n                  currentData.id === currentEditableId ? setCurrentEditableId(0) : setCurrentEditableId(currentData.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: currentData.id === currentEditableId ? `icon-checked` : `icon-edit`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 22\n              }, this) : false]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), getMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-error\",\n            children: getMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 30\n          }, this)]\n        }, currentData.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InformationCard, \"0kWHjLrbNNnTy9BQMyQdUrXMn8U=\");\n\n_c = InformationCard;\nexport default InformationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InformationCard\");","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/components/Cards/InformationCard.jsx"],"names":["AppControlContext","useContext","useState","useEffect","validations","updateUser","updatePersonalInformation","updateBusinessInformation","ExperianScore","ExperianAuth","updateUserProfile","SelectSearch","fuzzySearch","states","InformationCard","props","Form","Form2","Form3","informationData","SetInformationData","DrivingLicense","unvalidated","setUnvalidated","currentEditableId","setCurrentEditableId","contextMapper","data","experianAuthToken","setExperianAuthToken","selectSearch","value","State","businessInfoObj","CorporateName","BusinessPhysicalAddress","BusinessAs","City","DUNS","SicCode","Zip","comapany","handleInput","e","target","name","getValidation","find","validation","validationRule","test","includes","removeIndex","findIndex","current","unvalidatedTemp","splice","title","personalInfoObj","FName","LName","Email","user","personalData","personalInfo","userProfileObj","DOB","userProfle","then","response","payload","access_token","authToken","catch","err","console","log","Experian","results","commercialScore","score","callback","error","map","currentData","index","getMessage","message","length","id","key","color"],"mappings":"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","sourcesContent":["import { AppControlContext } from \"../../context/AppControlContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { validations } from \"./json/validations\";\nimport \"./InformationCard.scss\";\nimport updateUser from \"../../services/Dashboard/updateUser\"\nimport updatePersonalInformation from \"../../services/Dashboard/updatePersonalInformation\";\nimport updateBusinessInformation from \"../../services/Dashboard/updateBusinessInformation\";\nimport ExperianScore from \"../../services/Experian/Score\";\nimport ExperianAuth from \"../../services/Experian/Auth\";\nimport updateUserProfile from \"../../services/Dashboard/updateUserProfile\"\nimport SelectSearch, { fuzzySearch } from \"react-select-search\";\nimport states from \"../Form/json/states\";\n\nconst InformationCard = (props) => {\n  const { Form, Form2, Form3 } = useContext(AppControlContext);\n  const [informationData, SetInformationData] = useState({\n    ...Form,\n    ...Form2,\n    ...Form3,\n    DrivingLicense: \"4741121003\",\n    // EIN: \"123456789\",\n    // Experian: \"475/800\",\n  });\n\n  const [unvalidated, setUnvalidated] = useState([]);\n\n  const [currentEditableId, setCurrentEditableId] = useState(0);\n  const contextMapper = props.data;\n  const [experianAuthToken, setExperianAuthToken] = useState(\"\");\n\n  const selectSearch = (value) => {\n    SetInformationData({\n      ...informationData,\n      State: value,\n    });\n    let businessInfoObj = {\n      \"CorporateName\": informationData.CorporateName,\n      \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n      \"BusinessAs\": informationData.BusinessAs,\n      \"City\": informationData.City,\n      \"DUNS\": informationData.DUNS,\n      \"SicCode\": informationData.SicCode,\n      \"State\": value,\n      \"Zip\": informationData.Zip\n    }\n    const comapany = updateBusinessInformation(Form2)\n  };\n\n  const handleInput = (e) => {\n    SetInformationData({\n      ...informationData,\n      [e.target.name]: e.target.value,\n    });\n\n    const getValidation = validations.find(\n      (validation) => e.target.name === validation.name\n    );\n    if (getValidation.validationRule.test(e.target.value)) {\n      if (unvalidated.includes(e.target.name)) {\n        const removeIndex = unvalidated.findIndex(\n          (current) => current === e.target.name\n        );\n        let unvalidatedTemp = [...unvalidated];\n        unvalidatedTemp.splice(removeIndex, 1);\n        setUnvalidated(unvalidatedTemp);\n      }\n      if (props.title === \"Personal Information\") {\n        let personalInfoObj = {\n          \"FName\":informationData.FName,\n          \"LName\":informationData.LName,\n          \"Email\":informationData.Email\n        };\n      personalInfoObj[e.target.name] = e.target.value\n      const user = updateUser(personalInfoObj);\n      let personalData = {...Form3};\n      personalData[e.target.name] = e.target.value\n      const personalInfo = updatePersonalInformation(personalData);\n      let userProfileObj = {\n        \"DOB\":informationData.DOB,\n        \"DrivingLicense\":informationData.DrivingLicense\n      };\n      const userProfle = updateUserProfile(userProfileObj)\n      } \n      else if(props.title === \"Company Information\"){\n        let businessInfoObj = {\n            \"CorporateName\": informationData.CorporateName,\n            \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n            \"BusinessAs\": informationData.BusinessAs,\n            \"City\": informationData.City,\n            \"DUNS\": informationData.DUNS,\n            \"SicCode\": informationData.SicCode,\n            \"State\": informationData.State,\n            \"Zip\": informationData.Zip\n          }\n        businessInfoObj[e.target.name] = e.target.value\n        const comapany = updateBusinessInformation(businessInfoObj)\n        if (e.target.name === 'DUNS'){\n          ExperianAuth()\n            .then((response) => response.payload.access_token)\n            .then((authToken) => setExperianAuthToken(authToken))\n            .catch((err) => console.log(err));\n          ExperianScore(e.target.value, experianAuthToken)\n            .then((response) =>\n            SetInformationData({\n                ...informationData,\n                [e.target.name]: e.target.value,\n                Experian: response.payload\n                  ? response.payload.results.commercialScore.score + \"/800\"\n                  : \"\",\n              },\n              props.callback(response.payload\n                  ? response.payload.results.commercialScore.score + \"/800\"\n                  : \"\"))\n            )\n            .catch((err) => console.error(err));\n        }\n      }\n    } else {\n      if (!unvalidated.includes(e.target.name))\n        setUnvalidated([...unvalidated, e.target.name]);\n    }\n  };\n  \n\n  return (\n    <div className=\"white-box white-box--mb\">\n      <div className=\"white-box__title\">\n        <h2>{props.title}</h2>\n      </div>\n      <div className=\"row row--mb\">\n        {contextMapper.map((currentData, index) => {\n          let getMessage;\n          if (unvalidated.includes(currentData.name)) {\n            getMessage = validations.find(\n              (validation) => currentData.name === validation.name\n            );\n            getMessage = getMessage.message;\n          } else getMessage = false;\n\n          return (\n            <div\n              className={`${\n                contextMapper.length % 6 === 0 && currentData.id % 3 === 0\n                  ? \"col-12 col-sm-6 col-mb\"\n                  : \"col-12 col-sm-3 col-mb\"\n              }`}\n              key={currentData.id}\n            >\n              <div className=\"white-box__info\">\n                <h3>{currentData.title}</h3>\n                <div className=\"white-box__info-txt\">\n                  {currentEditableId === currentData.id ? (\n                    <input\n                      value={informationData[currentData.name]}\n                      name={currentData.name}\n                      onChange={handleInput}\n                      onKeyDown={(e) => {\n                        if (e.key === \"Enter\") {\n                          handleInput(e);\n                          setCurrentEditableId(!currentEditableId);\n                        }\n                      }}\n                      className=\"custom-amount\"\n                      style={{ color: \"black\" }}\n                    />\n                  ) : currentData.name === \"State\" ? (\n                  <SelectSearch\n                    options={states}\n                    search\n                    autoComplete=\"null\"\n                    // value={informationData.State}\n                    filterOptions={fuzzySearch}\n                    onChange={selectSearch}\n                    placeholder={informationData.State}\n                  />\n                  ):(\n                    <p>{informationData[currentData.name]}</p>\n                  )}\n                  { currentData.name !== \"State\" && currentData.name !== \"Experian\" ?\n                    (<span\n                      onClick={() => {\n                        currentData.id === currentEditableId\n                          ? setCurrentEditableId(0)\n                          : setCurrentEditableId(currentData.id);\n                      }}\n                    >\n                      <i\n                        className={\n                          currentData.id === currentEditableId\n                            ? `icon-checked`\n                            : `icon-edit`\n                        }\n                      ></i>\n                    </span>\n                    ) : false}\n                </div>\n              </div>\n              {getMessage && <span className=\"has-error\">{getMessage}</span>}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default InformationCard;\n"]},"metadata":{},"sourceType":"module"}