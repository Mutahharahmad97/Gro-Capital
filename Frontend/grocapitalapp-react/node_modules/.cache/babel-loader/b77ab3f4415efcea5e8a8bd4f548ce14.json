{"ast":null,"code":"import { freshbooksBaseUrl } from \"../util/baseUrl\";\nimport { PROFIT_LOSS_URL } from \"../util/urls\";\n\nconst addFreshbooksProfitLoss = async data => {\n  try {\n    const response = await fetch(freshbooksBaseUrl() + PROFIT_LOSS_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        company_name: data.company_name,\n        currency_code: data.currency_code,\n        end_date: data.end_date,\n        total_expenses: data.total_expenses,\n        total_assets: data.total_assets,\n        total_income: data.total_income\n      })\n    });\n\n    if (response.ok) {\n      return {\n        success: true,\n        message: \"success\"\n      };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return {\n        success: false,\n        message: error.detail\n      };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message: '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]]\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return {\n      success: false,\n      message: \"API Error\"\n    };\n  }\n};\n\nexport default addFreshbooksProfitLoss;","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/services/Freshbooks/AddFreshbooksProfitLoss.js"],"names":["freshbooksBaseUrl","PROFIT_LOSS_URL","addFreshbooksProfitLoss","data","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","company_name","currency_code","end_date","total_expenses","total_assets","total_income","ok","success","message","status","error","json","detail","Object","keys","e","console","log"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,iBAAlC;AACA,SAASC,eAAT,QAAgC,cAAhC;;AAEA,MAAMC,uBAAuB,GAAG,MAAOC,IAAP,IAAgB;AAC9C,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BL,iBAAiB,KAAKC,eADI,EAE1B;AACEK,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,SAAQC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF/C,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,YAAY,EAAEX,IAAI,CAACW,YADA;AAEnBC,QAAAA,aAAa,EAAEZ,IAAI,CAACY,aAFD;AAGnBC,QAAAA,QAAQ,EAAEb,IAAI,CAACa,QAHI;AAInBC,QAAAA,cAAc,EAAEd,IAAI,CAACc,cAJF;AAKnBC,QAAAA,YAAY,EAAEf,IAAI,CAACe,YALA;AAMnBC,QAAAA,YAAY,EAAEhB,IAAI,CAACgB;AANA,OAAf;AANR,KAF0B,CAA5B;;AAmBA,QAAIf,QAAQ,CAACgB,EAAb,EAAiB;AACf,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAP;AACD,KAFD,MAEO,IAAIlB,QAAQ,CAACmB,MAAT,KAAoB,GAAxB,EAA6B;AAClC,YAAMC,KAAK,GAAG,MAAMpB,QAAQ,CAACqB,IAAT,EAApB;AACA,aAAO;AAAEJ,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,OAAO,EAAEE,KAAK,CAACE;AAAjC,OAAP;AACD,KAHM,MAGA;AACL,YAAMF,KAAK,GAAG,MAAMpB,QAAQ,CAACqB,IAAT,EAApB;AACA,aAAO;AACLJ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EACL,MAAMK,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAN,GAA8B,KAA9B,GAAsCA,KAAK,CAACG,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAD;AAHxC,OAAP;AAKD;AACF,GAjCD,CAiCE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAO;AAAER,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAP;AACD;AACF,CAtCD;;AAwCA,eAAepB,uBAAf","sourcesContent":["import { freshbooksBaseUrl } from \"../util/baseUrl\";\nimport { PROFIT_LOSS_URL } from \"../util/urls\";\n\nconst addFreshbooksProfitLoss = async (data) => {\n  try {\n    const response = await fetch(\n      freshbooksBaseUrl() + PROFIT_LOSS_URL,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        },\n        body: JSON.stringify({\n          company_name: data.company_name,\n          currency_code: data.currency_code,\n          end_date: data.end_date,\n          total_expenses: data.total_expenses,\n          total_assets: data.total_assets,\n          total_income: data.total_income,\n        }),\n      }\n    );\n\n    if (response.ok) {\n      return { success: true, message: \"success\" };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return { success: false, message: error.detail };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message:\n          '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]],\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return { success: false, message: \"API Error\" };\n  }\n};\n\nexport default addFreshbooksProfitLoss;\n"]},"metadata":{},"sourceType":"module"}