{"ast":null,"code":"import { intuitBaseUrl } from \"../util/baseUrl\";\nimport { ASSET_LIABILITIES_AND_EQUITY_URL } from \"../util/urls\";\n\nconst addAssetLiabilitiesAndEquity = async data => {\n  try {\n    const response = await fetch(intuitBaseUrl() + ASSET_LIABILITIES_AND_EQUITY_URL, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        total_bank_accounts: data.total_bank_accounts,\n        total_other_current_assets: data.total_other_current_assets,\n        total_current_assets: data.total_current_assets,\n        total_fixed_assets: data.total_fixed_assets,\n        total_assets: data.total_assets,\n        accounts_payable: data.accounts_payable,\n        total_accounts_payable: data.total_accounts_payable,\n        total_other_current_liabilities: data.total_other_current_liabilities,\n        total_current_liabilities: data.total_current_liabilities,\n        total_long_term_liabilities: data.total_long_term_liabilities,\n        total_liabilities: data.total_liabilities,\n        total_equity: data.total_equity,\n        total_liabilities_and_equity: data.total_liabilities_and_equity\n      })\n    });\n\n    if (response.ok) {\n      return {\n        success: true,\n        message: \"success\"\n      };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return {\n        success: false,\n        message: error.detail\n      };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message: '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]]\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return {\n      success: false,\n      message: \"API Error\"\n    };\n  }\n};\n\nexport default addAssetLiabilitiesAndEquity;","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/services/QuickBooks/AddAssetsLiabilititesAndEquity.js"],"names":["intuitBaseUrl","ASSET_LIABILITIES_AND_EQUITY_URL","addAssetLiabilitiesAndEquity","data","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","total_bank_accounts","total_other_current_assets","total_current_assets","total_fixed_assets","total_assets","accounts_payable","total_accounts_payable","total_other_current_liabilities","total_current_liabilities","total_long_term_liabilities","total_liabilities","total_equity","total_liabilities_and_equity","ok","success","message","status","error","json","detail","Object","keys","e","console","log"],"mappings":"AAAA,SAASA,aAAT,QAA8B,iBAA9B;AACA,SAASC,gCAAT,QAAiD,cAAjD;;AAEA,MAAMC,4BAA4B,GAAG,MAAOC,IAAP,IAAgB;AACnD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1BL,aAAa,KAAKC,gCADQ,EAE1B;AACEK,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,SAAQC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF/C,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,mBAAmB,EAAEX,IAAI,CAACW,mBADP;AAEnBC,QAAAA,0BAA0B,EAAEZ,IAAI,CAACY,0BAFd;AAGnBC,QAAAA,oBAAoB,EAAEb,IAAI,CAACa,oBAHR;AAInBC,QAAAA,kBAAkB,EAAEd,IAAI,CAACc,kBAJN;AAKnBC,QAAAA,YAAY,EAAEf,IAAI,CAACe,YALA;AAMnBC,QAAAA,gBAAgB,EAAEhB,IAAI,CAACgB,gBANJ;AAOnBC,QAAAA,sBAAsB,EAAEjB,IAAI,CAACiB,sBAPV;AAQnBC,QAAAA,+BAA+B,EAAElB,IAAI,CAACkB,+BARnB;AASnBC,QAAAA,yBAAyB,EAAEnB,IAAI,CAACmB,yBATb;AAUnBC,QAAAA,2BAA2B,EAAEpB,IAAI,CAACoB,2BAVf;AAWnBC,QAAAA,iBAAiB,EAAErB,IAAI,CAACqB,iBAXL;AAYnBC,QAAAA,YAAY,EAAEtB,IAAI,CAACsB,YAZA;AAanBC,QAAAA,4BAA4B,EAAEvB,IAAI,CAACuB;AAbhB,OAAf;AANR,KAF0B,CAA5B;;AA0BA,QAAItB,QAAQ,CAACuB,EAAb,EAAiB;AACf,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAP;AACD,KAFD,MAEO,IAAIzB,QAAQ,CAAC0B,MAAT,KAAoB,GAAxB,EAA6B;AAClC,YAAMC,KAAK,GAAG,MAAM3B,QAAQ,CAAC4B,IAAT,EAApB;AACA,aAAO;AAAEJ,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,OAAO,EAAEE,KAAK,CAACE;AAAjC,OAAP;AACD,KAHM,MAGA;AACL,YAAMF,KAAK,GAAG,MAAM3B,QAAQ,CAAC4B,IAAT,EAApB;AACA,aAAO;AACLJ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EACL,MAAMK,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAN,GAA8B,KAA9B,GAAsCA,KAAK,CAACG,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAD;AAHxC,OAAP;AAKD;AACF,GAxCD,CAwCE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAO;AAAER,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAP;AACD;AACF,CA7CD;;AA+CA,eAAe3B,4BAAf","sourcesContent":["import { intuitBaseUrl } from \"../util/baseUrl\";\nimport { ASSET_LIABILITIES_AND_EQUITY_URL } from \"../util/urls\";\n\nconst addAssetLiabilitiesAndEquity = async (data) => {\n  try {\n    const response = await fetch(\n      intuitBaseUrl() + ASSET_LIABILITIES_AND_EQUITY_URL,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        },\n        body: JSON.stringify({\n          total_bank_accounts: data.total_bank_accounts,\n          total_other_current_assets: data.total_other_current_assets,\n          total_current_assets: data.total_current_assets,\n          total_fixed_assets: data.total_fixed_assets,\n          total_assets: data.total_assets,\n          accounts_payable: data.accounts_payable,\n          total_accounts_payable: data.total_accounts_payable,\n          total_other_current_liabilities: data.total_other_current_liabilities,\n          total_current_liabilities: data.total_current_liabilities,\n          total_long_term_liabilities: data.total_long_term_liabilities,\n          total_liabilities: data.total_liabilities,\n          total_equity: data.total_equity,\n          total_liabilities_and_equity: data.total_liabilities_and_equity,\n        }),\n      }\n    );\n\n    if (response.ok) {\n      return { success: true, message: \"success\" };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return { success: false, message: error.detail };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message:\n          '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]],\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return { success: false, message: \"API Error\" };\n  }\n};\n\nexport default addAssetLiabilitiesAndEquity;\n"]},"metadata":{},"sourceType":"module"}