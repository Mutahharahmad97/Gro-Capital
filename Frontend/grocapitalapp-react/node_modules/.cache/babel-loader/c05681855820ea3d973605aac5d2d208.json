{"ast":null,"code":"import { baseUrl } from \"../util/baseUrl\";\nimport { AUTHORIZE_USER_TOKEN_URL } from \"../util/urls\";\n\nconst updateUser = async data => {\n  try {\n    const response = await fetch(baseUrl() + AUTHORIZE_USER_TOKEN_URL, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        first_name: data.FName || '',\n        last_name: data.LName || '',\n        email: data.Email || ''\n      })\n    });\n\n    if (response.ok) {\n      return {\n        success: true,\n        message: \"success\"\n      };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return {\n        success: false,\n        message: error.detail\n      };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message: '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]]\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return {\n      success: false,\n      message: \"API Error\"\n    };\n  }\n};\n\nexport default updateUser;","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/Latest/grocapitalapp-react/src/services/Dashboard/updateUser.js"],"names":["baseUrl","AUTHORIZE_USER_TOKEN_URL","updateUser","data","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","first_name","FName","last_name","LName","email","Email","ok","success","message","status","error","json","detail","Object","keys","e","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,wBAAT,QAAyC,cAAzC;;AAEA,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACjC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,KAAKC,wBAAb,EAAuC;AACjEK,MAAAA,MAAM,EAAE,OADyD;AAEjEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,SAAQC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF/C,OAFwD;AAMjEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,UAAU,EAAEX,IAAI,CAACY,KAAL,IAAc,EADP;AAEnBC,QAAAA,SAAS,EAAEb,IAAI,CAACc,KAAL,IAAc,EAFN;AAGnBC,QAAAA,KAAK,EAAEf,IAAI,CAACgB,KAAL,IAAc;AAHF,OAAf;AAN2D,KAAvC,CAA5B;;AAaA,QAAIf,QAAQ,CAACgB,EAAb,EAAiB;AACf,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAP;AACD,KAFD,MAEO,IAAIlB,QAAQ,CAACmB,MAAT,KAAoB,GAAxB,EAA6B;AAClC,YAAMC,KAAK,GAAG,MAAMpB,QAAQ,CAACqB,IAAT,EAApB;AACA,aAAO;AAAEJ,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,OAAO,EAAEE,KAAK,CAACE;AAAjC,OAAP;AACD,KAHM,MAGA;AACL,YAAMF,KAAK,GAAG,MAAMpB,QAAQ,CAACqB,IAAT,EAApB;AACA,aAAO;AACLJ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EACL,MAAMK,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAN,GAA8B,KAA9B,GAAsCA,KAAK,CAACG,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAD;AAHxC,OAAP;AAKD;AACF,GA3BD,CA2BE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAO;AAAER,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAP;AACD;AACF,CAhCD;;AAkCA,eAAepB,UAAf","sourcesContent":["import { baseUrl } from \"../util/baseUrl\";\nimport { AUTHORIZE_USER_TOKEN_URL } from \"../util/urls\";\n\nconst updateUser = async (data) => {\n  try {\n    const response = await fetch(baseUrl() + AUTHORIZE_USER_TOKEN_URL, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        first_name: data.FName || '',\n        last_name: data.LName || '',\n        email: data.Email || '',\n      }),\n    });\n\n    if (response.ok) {\n      return { success: true, message: \"success\" };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return { success: false, message: error.detail };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message:\n          '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]],\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return { success: false, message: \"API Error\" };\n  }\n};\n\nexport default updateUser;\n"]},"metadata":{},"sourceType":"module"}