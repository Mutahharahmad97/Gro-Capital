{"ast":null,"code":"import { baseUrl } from \"../util/baseUrl\";\nimport { ADD_PERSONAL_INFORMATION_URL } from \"../util/urls\";\n\nconst updatePersonalInformation = async data => {\n  try {\n    const response = await fetch(baseUrl() + ADD_PERSONAL_INFORMATION_URL, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        social_security_number: data.SocialSecurityNumber || '',\n        personal_physical_address: data.PersonalPhysicalAddress || '',\n        total_monthly_income: data.TotalMonthlyIncome || '',\n        total_monthly_expenses: data.TotalMonthlyExpenses || '',\n        birthday: data.Birthday || '',\n        home_address_1: data.HomeAddress1,\n        home_address_2: data.HomeAddress2,\n        city: data.City,\n        state: data.State,\n        zip: data.Zip\n      })\n    });\n\n    if (response.ok) {\n      return {\n        success: true,\n        message: \"success\"\n      };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return {\n        success: false,\n        message: error.detail\n      };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message: '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]]\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return {\n      success: false,\n      message: \"API Error\"\n    };\n  }\n};\n\nexport default updatePersonalInformation;","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/services/Dashboard/updatePersonalInformation.js"],"names":["baseUrl","ADD_PERSONAL_INFORMATION_URL","updatePersonalInformation","data","response","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","social_security_number","SocialSecurityNumber","personal_physical_address","PersonalPhysicalAddress","total_monthly_income","TotalMonthlyIncome","total_monthly_expenses","TotalMonthlyExpenses","birthday","Birthday","home_address_1","HomeAddress1","home_address_2","HomeAddress2","city","City","state","State","zip","Zip","ok","success","message","status","error","json","detail","Object","keys","e","console","log"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,4BAAT,QAA6C,cAA7C;;AAEA,MAAMC,yBAAyB,GAAG,MAAOC,IAAP,IAAgB;AAChD,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACL,OAAO,KAAKC,4BAAb,EAA2C;AACrEK,MAAAA,MAAM,EAAE,OAD6D;AAErEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,SAAQC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B;AAF/C,OAF4D;AAMrEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,sBAAsB,EAAEX,IAAI,CAACY,oBAAL,IAA6B,EADlC;AAEnBC,QAAAA,yBAAyB,EAAEb,IAAI,CAACc,uBAAL,IAAgC,EAFxC;AAGnBC,QAAAA,oBAAoB,EAAEf,IAAI,CAACgB,kBAAL,IAA2B,EAH9B;AAInBC,QAAAA,sBAAsB,EAAEjB,IAAI,CAACkB,oBAAL,IAA6B,EAJlC;AAKnBC,QAAAA,QAAQ,EAAEnB,IAAI,CAACoB,QAAL,IAAiB,EALR;AAMnBC,QAAAA,cAAc,EAAErB,IAAI,CAACsB,YANF;AAOnBC,QAAAA,cAAc,EAAEvB,IAAI,CAACwB,YAPF;AAQnBC,QAAAA,IAAI,EAAEzB,IAAI,CAAC0B,IARQ;AASnBC,QAAAA,KAAK,EAAE3B,IAAI,CAAC4B,KATO;AAUnBC,QAAAA,GAAG,EAAE7B,IAAI,CAAC8B;AAVS,OAAf;AAN+D,KAA3C,CAA5B;;AAoBA,QAAI7B,QAAQ,CAAC8B,EAAb,EAAiB;AACf,aAAO;AAAEC,QAAAA,OAAO,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAP;AACD,KAFD,MAEO,IAAIhC,QAAQ,CAACiC,MAAT,KAAoB,GAAxB,EAA6B;AAClC,YAAMC,KAAK,GAAG,MAAMlC,QAAQ,CAACmC,IAAT,EAApB;AACA,aAAO;AAAEJ,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,OAAO,EAAEE,KAAK,CAACE;AAAjC,OAAP;AACD,KAHM,MAGA;AACL,YAAMF,KAAK,GAAG,MAAMlC,QAAQ,CAACmC,IAAT,EAApB;AACA,aAAO;AACLJ,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,OAAO,EACL,MAAMK,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAN,GAA8B,KAA9B,GAAsCA,KAAK,CAACG,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmB,CAAnB,CAAD;AAHxC,OAAP;AAKD;AACF,GAlCD,CAkCE,OAAOK,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAO;AAAER,MAAAA,OAAO,EAAE,KAAX;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAP;AACD;AACF,CAvCD;;AAyCA,eAAelC,yBAAf","sourcesContent":["import { baseUrl } from \"../util/baseUrl\";\nimport { ADD_PERSONAL_INFORMATION_URL } from \"../util/urls\";\n\nconst updatePersonalInformation = async (data) => {\n  try {\n    const response = await fetch(baseUrl() + ADD_PERSONAL_INFORMATION_URL, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Token ${localStorage.getItem(\"token\")}`,\n      },\n      body: JSON.stringify({\n        social_security_number: data.SocialSecurityNumber || '',\n        personal_physical_address: data.PersonalPhysicalAddress || '',\n        total_monthly_income: data.TotalMonthlyIncome || '',\n        total_monthly_expenses: data.TotalMonthlyExpenses || '',\n        birthday: data.Birthday || '',\n        home_address_1: data.HomeAddress1,\n        home_address_2: data.HomeAddress2,\n        city: data.City,\n        state: data.State,\n        zip: data.Zip,\n      }),\n    });\n\n    if (response.ok) {\n      return { success: true, message: \"success\" };\n    } else if (response.status === 401) {\n      const error = await response.json();\n      return { success: false, message: error.detail };\n    } else {\n      const error = await response.json();\n      return {\n        success: false,\n        message:\n          '\"' + Object.keys(error)[0] + '\": ' + error[Object.keys(error)[0]],\n      };\n    }\n  } catch (e) {\n    console.log(e);\n    return { success: false, message: \"API Error\" };\n  }\n};\n\nexport default updatePersonalInformation;\n"]},"metadata":{},"sourceType":"module"}