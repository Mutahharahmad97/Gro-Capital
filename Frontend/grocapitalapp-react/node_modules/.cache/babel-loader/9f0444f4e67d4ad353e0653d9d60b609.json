{"ast":null,"code":"var _jsxFileName = \"/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/components/Form/Plaid.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useCallback, useState, useContext } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\nimport { plaidBaseUrl } from \"../../services/util/baseUrl.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport patchFormStep from \"../../services/Forms/patchFormStep\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Plaid = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    setFormStep,\n    setFormBackSteps,\n    formBackSteps\n  } = useContext(AppControlContext);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0\n  });\n  const generateToken = useCallback(async () => {\n    const path = plaidBaseUrl() + \"create-link-token/\";\n    const response = await fetch(path, {\n      method: \"POST\"\n    });\n\n    if (!response.ok) {\n      return;\n    }\n\n    const data = await response.json();\n\n    if (data) {\n      localStorage.setItem(\"link_token\", data.link_token);\n      setAccessToken(data.link_token);\n    }\n  }, []);\n  useEffect(() => {\n    generateToken();\n  }, [generateToken]);\n  const onSuccess = useCallback(public_token => {\n    // send public_token to server\n    // const setToken = async () => {\n    //   const response = await fetch(plaidBaseUrl() + \"set-access-token/\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n    //     },\n    //     body: `public_token=${public_token}`,\n    //   });\n    //   if (!response.ok) {\n    //     return;\n    //   }\n    // };\n    const getAuth = async () => {\n      const response = await fetch(plaidBaseUrl() + \"plaid-auth/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\"\n        },\n        body: `public_token=${public_token}`\n      });\n\n      if (!response.ok) {\n        return;\n      }\n\n      const data = await response.json();\n      const authData = data.numbers.ach.map(achNumbers => {\n        const account = data.accounts.filter(a => {\n          return a.account_id === achNumbers.account_id;\n        })[0];\n        const obj = {\n          name: account.name,\n          balance: formatter.format(account.balances.available) || formatter.format(account.balances.current),\n          account_id: achNumbers.account_id,\n          account_number: achNumbers.account,\n          routing_number: achNumbers.routing\n        };\n        return obj;\n      });\n      const add_bank_auth_data = await fetch(plaidBaseUrl() + \"banking-auth/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`\n        },\n        body: JSON.stringify(authData)\n      });\n      const res = await add_bank_auth_data.json();\n      console.log(res);\n    }; // setToken();\n\n\n    getAuth().then(async () => {\n      const patchFormStep_ = await patchFormStep(3);\n\n      if (!patchFormStep_.success) {\n        props.setApiErrorMessage(patchFormStep_.message);\n        props.setApiErrorState(true);\n      } else {\n        // setFormBackSteps(formBackSteps > 0 ? formBackSteps-1:formBackSteps);\n        setFormStep(3);\n        history.push(\"/registration\");\n      }\n    }); //   window.history.pushState(\"\", \"\", \"/plaid\");\n  }, []);\n  const config = {\n    token: accessToken,\n    onSuccess\n  }; // const { open, ready } = usePlaidLink(config);\n\n  const {\n    open\n  } = usePlaidLink(config);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        marginTop: \"2%\"\n      },\n      className: \"btn btn--full btn--green open-popup\",\n      onClick: () => open(),\n      children: [\"Add Bank Information\", /*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        width: \"12\",\n        height: \"21\",\n        viewBox: \"0 0 12 21\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M-0.293106781,-0.293106781 C0.0673771804,-0.653590743 0.634608236,-0.681320278 1.02689944,-0.376295388 L1.12110678,-0.293106781 L10.9652136,9.551 L1.12110678,19.3951068 C0.730582489,19.7856311 0.0974175106,19.7856311 -0.293106781,19.3951068 C-0.653590743,19.0346228 -0.681320278,18.4673918 -0.376295388,18.0751006 L-0.293106781,17.9808932 L8.136,9.551 L-0.293106781,1.12110678 C-0.653590743,0.76062282 -0.681320278,0.193391764 -0.376295388,-0.198899443 L-0.293106781,-0.293106781 Z\",\n          transform: \"translate(1 1)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Plaid, \"UuQbgzavhqS40K6A7nnuYdNg6ds=\", false, function () {\n  return [useHistory, usePlaidLink];\n});\n\n_c = Plaid;\nexport default Plaid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Plaid\");","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/components/Form/Plaid.jsx"],"names":["useEffect","useCallback","useState","useContext","usePlaidLink","plaidBaseUrl","useHistory","AppControlContext","patchFormStep","Plaid","props","history","setFormStep","setFormBackSteps","formBackSteps","accessToken","setAccessToken","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","generateToken","path","response","fetch","method","ok","data","json","localStorage","setItem","link_token","onSuccess","public_token","getAuth","headers","body","authData","numbers","ach","map","achNumbers","account","accounts","filter","a","account_id","obj","name","balance","format","balances","available","current","account_number","routing_number","routing","add_bank_auth_data","Authorization","getItem","JSON","stringify","res","console","log","then","patchFormStep_","success","setApiErrorMessage","message","setApiErrorState","push","config","token","open","marginTop"],"mappings":"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","sourcesContent":["import { useEffect, useCallback, useState, useContext } from \"react\";\nimport { usePlaidLink } from \"react-plaid-link\";\nimport { plaidBaseUrl } from \"../../services/util/baseUrl.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport patchFormStep from \"../../services/Forms/patchFormStep\";\n\nconst Plaid = (props) => {\n  const history = useHistory();\n  const { setFormStep, setFormBackSteps, formBackSteps } = useContext(AppControlContext);\n  const [accessToken, setAccessToken] = useState(\"\");\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n\n  const generateToken = useCallback(async () => {\n    const path = plaidBaseUrl() + \"create-link-token/\";\n    const response = await fetch(path, {\n      method: \"POST\",\n    });\n    if (!response.ok) {\n      return;\n    }\n    const data = await response.json();\n    if (data) {\n      localStorage.setItem(\"link_token\", data.link_token);\n      setAccessToken(data.link_token);\n    }\n  }, []);\n\n  useEffect(() => {\n    generateToken();\n  }, [generateToken]);\n\n  const onSuccess = useCallback((public_token) => {\n    // send public_token to server\n    // const setToken = async () => {\n    //   const response = await fetch(plaidBaseUrl() + \"set-access-token/\", {\n    //     method: \"POST\",\n    //     headers: {\n    //       \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n    //     },\n    //     body: `public_token=${public_token}`,\n    //   });\n    //   if (!response.ok) {\n    //     return;\n    //   }\n    // };\n\n    const getAuth = async () => {\n      const response = await fetch(plaidBaseUrl() + \"plaid-auth/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded;charset=UTF-8\",\n        },\n        body: `public_token=${public_token}`,\n      });\n      if (!response.ok) {\n        return;\n      }\n      const data = await response.json();\n      const authData = data.numbers.ach.map((achNumbers) => {\n        const account = data.accounts.filter((a) => {\n          return a.account_id === achNumbers.account_id;\n        })[0];\n        const obj = {\n          name: account.name,\n          balance:\n            formatter.format(account.balances.available) ||\n            formatter.format(account.balances.current),\n          account_id: achNumbers.account_id,\n          account_number: achNumbers.account,\n          routing_number: achNumbers.routing,\n        };\n        return obj;\n      });\n      const add_bank_auth_data = await fetch(plaidBaseUrl() + \"banking-auth/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Token ${localStorage.getItem(\"token\")}`,\n        },\n        body: JSON.stringify(authData),\n      });\n\n      const res = await add_bank_auth_data.json();\n      console.log(res);\n    };\n    // setToken();\n    getAuth().then(async () => {\n      const patchFormStep_ = await patchFormStep(3);\n      if (!patchFormStep_.success) {\n        props.setApiErrorMessage(patchFormStep_.message);\n        props.setApiErrorState(true);\n      } else {\n        // setFormBackSteps(formBackSteps > 0 ? formBackSteps-1:formBackSteps);\n        setFormStep(3);\n        history.push(\"/registration\");\n      }\n    });\n    //   window.history.pushState(\"\", \"\", \"/plaid\");\n  }, []);\n\n  const config = {\n    token: accessToken,\n    onSuccess,\n  };\n\n  // const { open, ready } = usePlaidLink(config);\n  const { open } = usePlaidLink(config);\n\n  return (\n    <div>\n      <button\n        style={{ marginTop: \"2%\" }}\n        className=\"btn btn--full btn--green open-popup\"\n        onClick={() => open()}\n      >\n        Add Bank Information\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"12\"\n            height=\"21\"\n            viewBox=\"0 0 12 21\"\n          >\n            <path\n              d=\"M-0.293106781,-0.293106781 C0.0673771804,-0.653590743 0.634608236,-0.681320278 1.02689944,-0.376295388 L1.12110678,-0.293106781 L10.9652136,9.551 L1.12110678,19.3951068 C0.730582489,19.7856311 0.0974175106,19.7856311 -0.293106781,19.3951068 C-0.653590743,19.0346228 -0.681320278,18.4673918 -0.376295388,18.0751006 L-0.293106781,17.9808932 L8.136,9.551 L-0.293106781,1.12110678 C-0.653590743,0.76062282 -0.681320278,0.193391764 -0.376295388,-0.198899443 L-0.293106781,-0.293106781 Z\"\n              transform=\"translate(1 1)\"\n            />\n          </svg>\n      </button>\n    </div>\n  );\n};\n\nexport default Plaid;\n"]},"metadata":{},"sourceType":"module"}