{"ast":null,"code":"var _jsxFileName = \"/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/Latest/grocapitalapp-react/src/components/Popups/LoginPopup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport { useHistory } from \"react-router-dom\";\nimport login from \"../../services/Auth/userLogin\";\nimport resetPassword from \"../../services/Auth/resetPassword\";\nimport resetCodeVerification from \"../../services/Auth/resetCodeVerification\";\nimport changePassword from \"../../services/Auth/changePassword\";\nimport { LinkedIn } from \"react-linkedin-login-oauth2\";\nimport linkedinUserLogin from \"../../services/Auth/linkedinUserLogin\";\nimport getUserProfile from \"../../services/Forms/getUserProfile\";\nimport passwordShowIcon from \"../../icons/password-show.svg\";\nimport passwordHideIcon from \"../../icons/password-hide.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPopup = props => {\n  _s();\n\n  const history = useHistory();\n  const {\n    setFormStep,\n    globalErrorMessage,\n    setGlobalErrorMessage\n  } = useContext(AppControlContext);\n  const popupState = props.popupState ? \"popup active\" : \"popup\";\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [resetPasswordState, setResetPasswordState] = useState(false);\n  const [enterCodeState, setEnterCodeState] = useState(false);\n  const [recoveryCode, setRecoveryCode] = useState(\"\");\n  const [enterPasswordState, setEnterPasswordState] = useState(false);\n  const [showPasswordState, setShowPasswordState] = useState(false);\n\n  const allstatesReset = () => {\n    setEnterCodeState(false);\n    setResetPasswordState(false);\n    setEnterPasswordState(false);\n  };\n\n  const handleFailure = error => {\n    setErrorMessage(error.errorMessage);\n    if (window.opener) window.close();\n  };\n\n  const handleSuccess = async data => {\n    const linkedinUserLogin_ = await linkedinUserLogin(data.code, process.env.NODE_ENV === \"development\" ? \"http://localhost:3000/linkedin\" : \"https://demo.grocapitalapp.com/linkedin\");\n    if (!linkedinUserLogin_.success) setErrorMessage(linkedinUserLogin_.message);else {\n      const getUserProfile_ = await getUserProfile();\n\n      if (!getUserProfile_.success) {\n        setErrorMessage(getUserProfile_.message);\n      } else {\n        if (getUserProfile_.response.form_step === 6) history.push(\"/dashboard\");else if (getUserProfile_.response.form_step === null || getUserProfile_.response.form_step < 1 || getUserProfile_.response.form_step > 6) {\n          setErrorMessage(\"Some problem occurred with form steps!\");\n          localStorage.removeItem(\"token\");\n        } else {\n          setFormStep(getUserProfile_.response.form_step);\n          history.push(\"/registration\");\n        }\n      }\n    }\n    if (window.opener) window.close();\n  };\n\n  const onLogin = async () => {\n    setGlobalErrorMessage(null);\n    if (email === \"\" || password === \"\" || password.trim().length === 0) setErrorMessage(\"Email or Password cannot be blank!\");else {\n      const userLogin = await login({\n        email,\n        password\n      });\n\n      if (userLogin.success) {\n        const getUserProfile_ = await getUserProfile();\n\n        if (!getUserProfile_.success) {\n          setErrorMessage(getUserProfile_.message);\n        } else {\n          if (getUserProfile_.response.form_step === 6) history.push(\"/dashboard\");else if (getUserProfile_.response.form_step === null || getUserProfile_.response.form_step < 1 || getUserProfile_.response.form_step > 6) {\n            setErrorMessage(\"Some problem occurred with form steps!\");\n            localStorage.removeItem(\"token\");\n          } else {\n            setFormStep(getUserProfile_.response.form_step);\n            history.push(\"/registration\");\n          }\n        }\n      } else setErrorMessage(userLogin.message); //   userLogin.success\n      //     ? history.push(\"/dashboard\")\n      //     : setErrorMessage(userLogin.message);\n      // }\n\n    }\n  };\n\n  const resetPasswordToggle = () => {\n    setErrorMessage(\"\");\n    setResetPasswordState(true);\n  };\n\n  const onPasswordRecover = async () => {\n    setErrorMessage(\"Verifying! Please Wait...\");\n    const passwordReset = await resetPassword({\n      email\n    });\n\n    if (passwordReset.success) {\n      setEnterCodeState(true);\n      setResetPasswordState(false);\n    }\n\n    setErrorMessage(passwordReset.message);\n  };\n\n  const verifyCode = async () => {\n    const codeVerification = await resetCodeVerification({\n      email,\n      recoveryCode\n    });\n\n    if (codeVerification.success) {\n      setEnterCodeState(false);\n      setResetPasswordState(false);\n      setEnterPasswordState(true);\n      setErrorMessage(\"\");\n    } else {\n      setErrorMessage(codeVerification.message);\n    }\n  };\n\n  const changePasswordHandler = async () => {\n    if (password === confirmPassword) {\n      if (/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d][A-Za-z\\d!@#$%^&*()_+]{7,}$/.test(password) && password.length > 0 && /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d][A-Za-z\\d!@#$%^&*()_+]{7,}$/.test(confirmPassword) && confirmPassword.length > 0) {\n        const changePassword_ = await changePassword({\n          email,\n          recoveryCode,\n          password\n        });\n\n        if (changePassword_.success) {\n          allstatesReset();\n          setErrorMessage(\"Password Changed successfully!\");\n        } else {\n          setErrorMessage(changePassword_.message);\n        }\n      } else setErrorMessage(\"Password must contain atleast 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character. Password must be atleast 8 characters long\");\n    } else {\n      setErrorMessage(\"Password does not match!\");\n    }\n  };\n\n  useEffect(() => {\n    if (globalErrorMessage) setErrorMessage(globalErrorMessage);\n  }, [globalErrorMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"popup-company\",\n    className: popupState,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__item popup__item--sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__close\",\n          onClick: () => {\n            props.onClose();\n            allstatesReset();\n            setErrorMessage(\"\");\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"15\",\n            height: \"15\",\n            viewBox: \"0 0 15 15\",\n            children: /*#__PURE__*/_jsxDEV(\"g\", {\n              transform: \"translate(.414 .414)\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12.2928932,0.292893219 C12.6834175,-0.0976310729 13.3165825,-0.0976310729 13.7071068,0.292893219 C14.0675907,0.65337718 14.0953203,1.22060824 13.7902954,1.61289944 L13.7071068,1.70710678 L1.70710678,13.7071068 C1.31658249,14.0976311 0.683417511,14.0976311 0.292893219,13.7071068 C-0.0675907428,13.3466228 -0.0953202783,12.7793918 0.209704612,12.3871006 L0.292893219,12.2928932 L12.2928932,0.292893219 Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M0.292893219,0.292893219 C0.65337718,-0.0675907428 1.22060824,-0.0953202783 1.61289944,0.209704612 L1.70710678,0.292893219 L13.7071068,12.2928932 C14.0976311,12.6834175 14.0976311,13.3165825 13.7071068,13.7071068 C13.3466228,14.0675907 12.7793918,14.0953203 12.3871006,13.7902954 L12.2928932,13.7071068 L0.292893219,1.70710678 C-0.0976310729,1.31658249 -0.0976310729,0.683417511 0.292893219,0.292893219 Z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__title popup__title--center\",\n          children: resetPasswordState ? \"Reset Password\" : enterCodeState ? \"Enter Code\" : enterPasswordState ? \"New Password\" : \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__txt\",\n          children: resetPasswordState ? \"Enter your email for recovery code!\" : enterCodeState ? \"Enter your recovery code to change password!\" : enterPasswordState ? \"Enter your new passwords below!\" : \"Please enter your login credentials below!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), props.message && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__txt\",\n          style: {\n            color: \"red\"\n          },\n          children: props.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), errorMessage.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup__txt\",\n          style: {\n            color: \"red\"\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this), !enterCodeState && !enterPasswordState && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-sm-12\",\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `${email.length > 0 ? \"has-value\" : \"\"}`,\n              type: \"text\",\n              id: \"email\",\n              name: \"email\",\n              onChange: e => setEmail(e.target.value),\n              value: email,\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  resetPasswordState ? onPasswordRecover() : onLogin();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), (!resetPasswordState && !enterCodeState || enterPasswordState) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-group--with-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group__icon\",\n              onClick: () => setShowPasswordState(!showPasswordState),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: showPasswordState ? passwordShowIcon : passwordHideIcon,\n                alt: \"password Icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: `${password.length > 0 ? \"has-value\" : \"\"}`,\n              type: showPasswordState ? \"text\" : \"password\",\n              id: \"password\",\n              name: \"password\",\n              onChange: e => setPassword(e.target.value),\n              value: password,\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  enterPasswordState ? changePasswordHandler() : onLogin();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), enterPasswordState && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-sm-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `${confirmPassword.length > 0 ? \"has-value\" : \"\"}`,\n              type: \"password\",\n              id: \"confirmPassword\",\n              name: \"confirmPassword\",\n              onChange: e => setConfirmPassword(e.target.value),\n              value: confirmPassword,\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  changePasswordHandler();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmPassword\",\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), enterCodeState && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-sm-12\",\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            style: {\n              marginBottom: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: `${recoveryCode.length > 0 ? \"has-value\" : \"\"}`,\n              type: \"number\",\n              id: \"code\",\n              name: \"code\",\n              onChange: e => e.target.value.length < 5 && setRecoveryCode(e.target.value),\n              value: recoveryCode,\n              onKeyDown: e => {\n                if (e.key === \"Enter\") {\n                  verifyCode();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"Code\",\n              children: \"Verification Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), !resetPasswordState && !enterCodeState && !enterPasswordState && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: resetPasswordToggle,\n            style: {\n              color: \"green\",\n              cursor: \"pointer\"\n            },\n            children: \"Forgot Password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: resetPasswordState ? onPasswordRecover : enterCodeState ? verifyCode : enterPasswordState ? changePasswordHandler : onLogin,\n            className: \"btn btn--green btn--full\",\n            children: resetPasswordState ? \"Send Code\" : enterCodeState ? \"Verify Code\" : enterPasswordState ? \"Change Password\" : \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this), !resetPasswordState && !enterCodeState && !enterPasswordState && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"registration__linkedin\",\n          style: {\n            paddingBottom: \"0px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LinkedIn, {\n            clientId: \"776xvfin2v6pet\",\n            onFailure: handleFailure,\n            onSuccess: handleSuccess,\n            redirectUri: process.env.NODE_ENV === \"development\" ? \"http://localhost:3000/linkedin\" : \"https://demo.grocapitalapp.com/linkedin\",\n            scope: \"r_emailaddress r_liteprofile\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              style: {\n                pointerEvents: \"none\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"20\",\n                  height: \"19\",\n                  viewBox: \"0 0 20 19\",\n                  children: /*#__PURE__*/_jsxDEV(\"g\", {\n                    fill: \"#FFF\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M14,6 C17.3137085,6 20,8.6862915 20,12 L20,19 L16,19 L16,12 C16,10.8954305 15.1045695,10 14,10 C12.8954305,10 12,10.8954305 12,12 L12,19 L8,19 L8,12 C8,8.6862915 10.6862915,6 14,6 Z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 396,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                      width: \"4\",\n                      height: \"12\",\n                      y: \"7\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                      cx: \"2\",\n                      cy: \"2\",\n                      r: \"2\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 398,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 19\n              }, this), \"Login with Linkedin\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__bg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPopup, \"yOe6X4byFcgiWQ6w6Gqo98iGuwg=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPopup;\nexport default LoginPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPopup\");","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/Latest/grocapitalapp-react/src/components/Popups/LoginPopup.jsx"],"names":["useState","useContext","useEffect","AppControlContext","useHistory","login","resetPassword","resetCodeVerification","changePassword","LinkedIn","linkedinUserLogin","getUserProfile","LoginPopup","props","history","setFormStep","globalErrorMessage","setGlobalErrorMessage","popupState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","resetPasswordState","setResetPasswordState","enterCodeState","setEnterCodeState","recoveryCode","setRecoveryCode","enterPasswordState","setEnterPasswordState","showPasswordState","setShowPasswordState","allstatesReset","handleFailure","error","window","opener","close","handleSuccess","data","linkedinUserLogin_","code","process","env","NODE_ENV","success","message","getUserProfile_","response","form_step","push","localStorage","removeItem","onLogin","trim","length","userLogin","resetPasswordToggle","onPasswordRecover","passwordReset","verifyCode","codeVerification","changePasswordHandler","test","changePassword_","onClose","color","marginBottom","e","target","value","key","passwordShowIcon","passwordHideIcon","cursor","paddingBottom","pointerEvents"],"mappings":"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","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport { useHistory } from \"react-router-dom\";\nimport login from \"../../services/Auth/userLogin\";\nimport resetPassword from \"../../services/Auth/resetPassword\";\nimport resetCodeVerification from \"../../services/Auth/resetCodeVerification\";\nimport changePassword from \"../../services/Auth/changePassword\";\nimport { LinkedIn } from \"react-linkedin-login-oauth2\";\nimport linkedinUserLogin from \"../../services/Auth/linkedinUserLogin\";\nimport getUserProfile from \"../../services/Forms/getUserProfile\";\nimport passwordShowIcon from \"../../icons/password-show.svg\";\nimport passwordHideIcon from \"../../icons/password-hide.svg\";\n\nconst LoginPopup = (props) => {\n  const history = useHistory();\n  const { setFormStep, globalErrorMessage, setGlobalErrorMessage } =\n    useContext(AppControlContext);\n  const popupState = props.popupState ? \"popup active\" : \"popup\";\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const [resetPasswordState, setResetPasswordState] = useState(false);\n\n  const [enterCodeState, setEnterCodeState] = useState(false);\n  const [recoveryCode, setRecoveryCode] = useState(\"\");\n\n  const [enterPasswordState, setEnterPasswordState] = useState(false);\n\n  const [showPasswordState, setShowPasswordState] = useState(false);\n\n  const allstatesReset = () => {\n    setEnterCodeState(false);\n    setResetPasswordState(false);\n    setEnterPasswordState(false);\n  };\n\n  const handleFailure = (error) => {\n    setErrorMessage(error.errorMessage);\n\n    if (window.opener) window.close();\n  };\n\n  const handleSuccess = async (data) => {\n    const linkedinUserLogin_ = await linkedinUserLogin(\n      data.code,\n      process.env.NODE_ENV === \"development\"\n        ? \"http://localhost:3000/linkedin\"\n        : \"https://demo.grocapitalapp.com/linkedin\"\n    );\n    if (!linkedinUserLogin_.success)\n      setErrorMessage(linkedinUserLogin_.message);\n    else {\n      const getUserProfile_ = await getUserProfile();\n      if (!getUserProfile_.success) {\n        setErrorMessage(getUserProfile_.message);\n      } else {\n        if (getUserProfile_.response.form_step === 6)\n          history.push(\"/dashboard\");\n        else if (\n          getUserProfile_.response.form_step === null ||\n          getUserProfile_.response.form_step < 1 ||\n          getUserProfile_.response.form_step > 6\n        ) {\n          setErrorMessage(\"Some problem occurred with form steps!\");\n          localStorage.removeItem(\"token\");\n        } else {\n          setFormStep(getUserProfile_.response.form_step);\n          history.push(\"/registration\");\n        }\n      }\n    }\n\n    if (window.opener) window.close();\n  };\n\n  const onLogin = async () => {\n    setGlobalErrorMessage(null);\n    if (email === \"\" || password === \"\" || password.trim().length === 0)\n      setErrorMessage(\"Email or Password cannot be blank!\");\n    else {\n      const userLogin = await login({ email, password });\n      if (userLogin.success) {\n        const getUserProfile_ = await getUserProfile();\n        if (!getUserProfile_.success) {\n          setErrorMessage(getUserProfile_.message);\n        } else {\n          if (getUserProfile_.response.form_step === 6)\n            history.push(\"/dashboard\");\n          else if (\n            getUserProfile_.response.form_step === null ||\n            getUserProfile_.response.form_step < 1 ||\n            getUserProfile_.response.form_step > 6\n          ) {\n            setErrorMessage(\"Some problem occurred with form steps!\");\n            localStorage.removeItem(\"token\");\n          } else {\n            setFormStep(getUserProfile_.response.form_step);\n            history.push(\"/registration\");\n          }\n        }\n      } else setErrorMessage(userLogin.message);\n      //   userLogin.success\n      //     ? history.push(\"/dashboard\")\n      //     : setErrorMessage(userLogin.message);\n      // }\n    }\n  };\n\n  const resetPasswordToggle = () => {\n    setErrorMessage(\"\");\n    setResetPasswordState(true);\n  };\n\n  const onPasswordRecover = async () => {\n    setErrorMessage(\"Verifying! Please Wait...\");\n    const passwordReset = await resetPassword({ email });\n    if (passwordReset.success) {\n      setEnterCodeState(true);\n      setResetPasswordState(false);\n    }\n    setErrorMessage(passwordReset.message);\n  };\n\n  const verifyCode = async () => {\n    const codeVerification = await resetCodeVerification({\n      email,\n      recoveryCode,\n    });\n    if (codeVerification.success) {\n      setEnterCodeState(false);\n      setResetPasswordState(false);\n      setEnterPasswordState(true);\n      setErrorMessage(\"\");\n    } else {\n      setErrorMessage(codeVerification.message);\n    }\n  };\n\n  const changePasswordHandler = async () => {\n    if (password === confirmPassword) {\n      if (\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d][A-Za-z\\d!@#$%^&*()_+]{7,}$/.test(\n          password\n        ) &&\n        password.length > 0 &&\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*()_+])[A-Za-z\\d][A-Za-z\\d!@#$%^&*()_+]{7,}$/.test(\n          confirmPassword\n        ) &&\n        confirmPassword.length > 0\n      ) {\n        const changePassword_ = await changePassword({\n          email,\n          recoveryCode,\n          password,\n        });\n\n        if (changePassword_.success) {\n          allstatesReset();\n          setErrorMessage(\"Password Changed successfully!\");\n        } else {\n          setErrorMessage(changePassword_.message);\n        }\n      } else\n        setErrorMessage(\n          \"Password must contain atleast 1 uppercase letter, 1 lowercase letter, 1 number, and 1 special character. Password must be atleast 8 characters long\"\n        );\n    } else {\n      setErrorMessage(\"Password does not match!\");\n    }\n  };\n\n  useEffect(() => {\n    if (globalErrorMessage) setErrorMessage(globalErrorMessage);\n  }, [globalErrorMessage]);\n\n  return (\n    <div id=\"popup-company\" className={popupState}>\n      <div className=\"popup__box\">\n        <div className=\"popup__item popup__item--sm\">\n          <div\n            className=\"popup__close\"\n            onClick={() => {\n              props.onClose();\n              allstatesReset();\n              setErrorMessage(\"\");\n            }}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"15\"\n              height=\"15\"\n              viewBox=\"0 0 15 15\"\n            >\n              <g transform=\"translate(.414 .414)\">\n                <path d=\"M12.2928932,0.292893219 C12.6834175,-0.0976310729 13.3165825,-0.0976310729 13.7071068,0.292893219 C14.0675907,0.65337718 14.0953203,1.22060824 13.7902954,1.61289944 L13.7071068,1.70710678 L1.70710678,13.7071068 C1.31658249,14.0976311 0.683417511,14.0976311 0.292893219,13.7071068 C-0.0675907428,13.3466228 -0.0953202783,12.7793918 0.209704612,12.3871006 L0.292893219,12.2928932 L12.2928932,0.292893219 Z\" />\n                <path d=\"M0.292893219,0.292893219 C0.65337718,-0.0675907428 1.22060824,-0.0953202783 1.61289944,0.209704612 L1.70710678,0.292893219 L13.7071068,12.2928932 C14.0976311,12.6834175 14.0976311,13.3165825 13.7071068,13.7071068 C13.3466228,14.0675907 12.7793918,14.0953203 12.3871006,13.7902954 L12.2928932,13.7071068 L0.292893219,1.70710678 C-0.0976310729,1.31658249 -0.0976310729,0.683417511 0.292893219,0.292893219 Z\" />\n              </g>\n            </svg>\n          </div>\n\n          <div className=\"popup__title popup__title--center\">\n            {resetPasswordState\n              ? \"Reset Password\"\n              : enterCodeState\n              ? \"Enter Code\"\n              : enterPasswordState\n              ? \"New Password\"\n              : \"Login\"}\n          </div>\n          <div className=\"popup__txt\">\n            {resetPasswordState\n              ? \"Enter your email for recovery code!\"\n              : enterCodeState\n              ? \"Enter your recovery code to change password!\"\n              : enterPasswordState\n              ? \"Enter your new passwords below!\"\n              : \"Please enter your login credentials below!\"}\n          </div>\n\n          {props.message && (\n            <div className=\"popup__txt\" style={{ color: \"red\" }}>\n              {props.message}\n            </div>\n          )}\n\n          {errorMessage.length > 1 && (\n            <div className=\"popup__txt\" style={{ color: \"red\" }}>\n              {errorMessage}\n            </div>\n          )}\n\n          {!enterCodeState && !enterPasswordState && (\n            <div\n              className={\"col-12 col-sm-12\"}\n              style={{ marginBottom: \"10px\" }}\n            >\n              <div className=\"form-group\" style={{ marginBottom: \"15px\" }}>\n                <input\n                  className={`${email.length > 0 ? \"has-value\" : \"\"}`}\n                  type=\"text\"\n                  id=\"email\"\n                  name=\"email\"\n                  onChange={(e) => setEmail(e.target.value)}\n                  value={email}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      resetPasswordState ? onPasswordRecover() : onLogin();\n                    }\n                  }}\n                />\n                <label htmlFor=\"email\">Email</label>\n              </div>\n            </div>\n          )}\n\n          {((!resetPasswordState && !enterCodeState) || enterPasswordState) && (\n            <div className=\"col-12 col-sm-12\">\n              <div className=\"form-group form-group--with-icon\">\n                <div\n                  className=\"form-group__icon\"\n                  onClick={() => setShowPasswordState(!showPasswordState)}\n                >\n                  <img\n                    src={\n                      showPasswordState ? passwordShowIcon : passwordHideIcon\n                    }\n                    alt=\"password Icon\"\n                  />\n                </div>\n                <input\n                  className={`${password.length > 0 ? \"has-value\" : \"\"}`}\n                  type={showPasswordState ? \"text\" : \"password\"}\n                  id=\"password\"\n                  name=\"password\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  value={password}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      enterPasswordState ? changePasswordHandler() : onLogin();\n                    }\n                  }}\n                />\n                <label htmlFor=\"password\">Password</label>\n              </div>\n            </div>\n          )}\n\n          {enterPasswordState && (\n            <div className={\"col-12 col-sm-12\"}>\n              <div className=\"form-group\">\n                <input\n                  className={`${confirmPassword.length > 0 ? \"has-value\" : \"\"}`}\n                  type=\"password\"\n                  id=\"confirmPassword\"\n                  name=\"confirmPassword\"\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  value={confirmPassword}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      changePasswordHandler();\n                    }\n                  }}\n                />\n                <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              </div>\n            </div>\n          )}\n\n          {enterCodeState && (\n            <div\n              className={\"col-12 col-sm-12\"}\n              style={{ marginBottom: \"10px\" }}\n            >\n              <div className=\"form-group\" style={{ marginBottom: \"15px\" }}>\n                <input\n                  className={`${recoveryCode.length > 0 ? \"has-value\" : \"\"}`}\n                  type=\"number\"\n                  id=\"code\"\n                  name=\"code\"\n                  onChange={(e) =>\n                    e.target.value.length < 5 && setRecoveryCode(e.target.value)\n                  }\n                  value={recoveryCode}\n                  onKeyDown={(e) => {\n                    if (e.key === \"Enter\") {\n                      verifyCode();\n                    }\n                  }}\n                />\n                <label htmlFor=\"Code\">Verification Code</label>\n              </div>\n            </div>\n          )}\n\n          {!resetPasswordState && !enterCodeState && !enterPasswordState && (\n            <div>\n              <p\n                onClick={resetPasswordToggle}\n                style={{ color: \"green\", cursor: \"pointer\" }}\n              >\n                Forgot Password?\n              </p>\n            </div>\n          )}\n\n          <div>\n            <div\n              onClick={\n                resetPasswordState\n                  ? onPasswordRecover\n                  : enterCodeState\n                  ? verifyCode\n                  : enterPasswordState\n                  ? changePasswordHandler\n                  : onLogin\n              }\n              className=\"btn btn--green btn--full\"\n            >\n              {resetPasswordState\n                ? \"Send Code\"\n                : enterCodeState\n                ? \"Verify Code\"\n                : enterPasswordState\n                ? \"Change Password\"\n                : \"Login\"}\n            </div>\n          </div>\n\n          {!resetPasswordState && !enterCodeState && !enterPasswordState && (\n            <div\n              className=\"registration__linkedin\"\n              style={{ paddingBottom: \"0px\" }}\n            >\n              <LinkedIn\n                clientId=\"776xvfin2v6pet\"\n                onFailure={handleFailure}\n                onSuccess={handleSuccess}\n                redirectUri={\n                  process.env.NODE_ENV === \"development\"\n                    ? \"http://localhost:3000/linkedin\"\n                    : \"https://demo.grocapitalapp.com/linkedin\"\n                }\n                scope={\"r_emailaddress r_liteprofile\"}\n              >\n                <a href=\"/\" style={{ pointerEvents: \"none\" }}>\n                  <span>\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"20\"\n                      height=\"19\"\n                      viewBox=\"0 0 20 19\"\n                    >\n                      <g fill=\"#FFF\">\n                        <path d=\"M14,6 C17.3137085,6 20,8.6862915 20,12 L20,19 L16,19 L16,12 C16,10.8954305 15.1045695,10 14,10 C12.8954305,10 12,10.8954305 12,12 L12,19 L8,19 L8,12 C8,8.6862915 10.6862915,6 14,6 Z\" />\n                        <rect width=\"4\" height=\"12\" y=\"7\" />\n                        <circle cx=\"2\" cy=\"2\" r=\"2\" />\n                      </g>\n                    </svg>\n                  </span>\n                  Login with Linkedin\n                </a>\n              </LinkedIn>\n            </div>\n          )}\n        </div>\n        <div className=\"popup__bg\"></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPopup;"]},"metadata":{},"sourceType":"module"}