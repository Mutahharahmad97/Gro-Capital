{"ast":null,"code":"var _jsxFileName = \"/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/components/Cards/InformationCard.jsx\",\n    _s = $RefreshSig$();\n\nimport { AppControlContext } from \"../../context/AppControlContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { validations } from \"./json/validations\";\nimport \"./InformationCard.scss\";\nimport updateUser from \"../../services/Dashboard/updateUser\";\nimport updatePersonalInformation from \"../../services/Dashboard/updatePersonalInformation\";\nimport updateBusinessInformation from \"../../services/Dashboard/updateBusinessInformation\";\nimport ExperianScore from \"../../services/Experian/Score\";\nimport ExperianAuth from \"../../services/Experian/Auth\";\nimport updateUserProfile from \"../../services/Dashboard/updateUserProfile\";\nimport SelectSearch, { fuzzySearch } from \"react-select-search\";\nimport states from \"../Form/json/states\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InformationCard = props => {\n  _s();\n\n  const {\n    Form,\n    Form2,\n    Form3\n  } = useContext(AppControlContext);\n  const [informationData, SetInformationData] = useState({ ...Form,\n    ...Form2,\n    // ...Form3,\n    Birthday: Form3.Birthday,\n    SocialSecurityNumber: Form3.SocialSecurityNumber,\n    DrivingLicense: \"4741121003\" // EIN: \"123456789\",\n    // Experian: \"475/800\",\n\n  });\n  const [unvalidated, setUnvalidated] = useState([]);\n  const [currentEditableId, setCurrentEditableId] = useState(0);\n  const contextMapper = props.data;\n  const [experianAuthToken, setExperianAuthToken] = useState(\"\"); // const selectSearch = (value) => {\n  //   SetInformationData({\n  //     ...informationData,\n  //     State: value,\n  //   });\n  //   let businessInfoObj = {\n  //     \"CorporateName\": informationData.CorporateName,\n  //     \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n  //     \"BusinessAs\": informationData.BusinessAs,\n  //     \"City\": informationData.City,\n  //     \"DUNS\": informationData.DUNS,\n  //     \"SicCode\": informationData.SicCode,\n  //     \"State\": value,\n  //     \"Zip\": informationData.Zip\n  //   }\n  //   const comapany = updateBusinessInformation(Form2)\n  // };\n  // const handleInput = (e) => {\n  //   SetInformationData({\n  //     ...informationData,\n  //     [e.target.name]: e.target.value,\n  //   });\n  //   const getValidation = validations.find(\n  //     (validation) => e.target.name === validation.name\n  //   );\n  //   if (getValidation.validationRule.test(e.target.value)) {\n  //     if (unvalidated.includes(e.target.name)) {\n  //       const removeIndex = unvalidated.findIndex(\n  //         (current) => current === e.target.name\n  //       );\n  //       let unvalidatedTemp = [...unvalidated];\n  //       unvalidatedTemp.splice(removeIndex, 1);\n  //       setUnvalidated(unvalidatedTemp);\n  //     }\n  //     if (props.title === \"Personal Information\") {\n  //       let personalInfoObj = {\n  //         \"FName\":informationData.FName,\n  //         \"LName\":informationData.LName,\n  //         \"Email\":informationData.Email\n  //       };\n  //     personalInfoObj[e.target.name] = e.target.value\n  //     const user = updateUser(personalInfoObj);\n  //     let personalData = {...Form3};\n  //     personalData[e.target.name] = e.target.value\n  //     const personalInfo = updatePersonalInformation(personalData);\n  //     let userProfileObj = {\n  //       \"DOB\":informationData.DOB,\n  //       \"DrivingLicense\":informationData.DrivingLicense\n  //     };\n  //     const userProfle = updateUserProfile(userProfileObj)\n  //     } \n  //     else if(props.title === \"Company Information\"){\n  //       let businessInfoObj = {\n  //           \"CorporateName\": informationData.CorporateName,\n  //           \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n  //           \"BusinessAs\": informationData.BusinessAs,\n  //           \"City\": informationData.City,\n  //           \"DUNS\": informationData.DUNS,\n  //           \"SicCode\": informationData.SicCode,\n  //           \"State\": informationData.State,\n  //           \"Zip\": informationData.Zip\n  //         }\n  //       businessInfoObj[e.target.name] = e.target.value\n  //       const comapany = updateBusinessInformation(businessInfoObj)\n  //       if (e.target.name === 'DUNS'){\n  //         ExperianAuth()\n  //           .then((response) => response.payload.access_token)\n  //           .then((authToken) => setExperianAuthToken(authToken))\n  //           .catch((err) => console.log(err));\n  //         ExperianScore(e.target.value, experianAuthToken)\n  //           .then((response) =>\n  //           SetInformationData({\n  //               ...informationData,\n  //               [e.target.name]: e.target.value,\n  //               Experian: response.payload\n  //                 ? response.payload.results.commercialScore.score + \"/800\"\n  //                 : \"\",\n  //             },\n  //             props.callback(response.payload\n  //                 ? response.payload.results.commercialScore.score + \"/800\"\n  //                 : \"\"))\n  //           )\n  //           .catch((err) => console.error(err));\n  //       }\n  //     }\n  //   } else {\n  //     if (!unvalidated.includes(e.target.name))\n  //       setUnvalidated([...unvalidated, e.target.name]);\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"white-box white-box--mb\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"white-box__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row row--mb\",\n      children: contextMapper.map((currentData, index) => {\n        let getMessage;\n\n        if (unvalidated.includes(currentData.name)) {\n          getMessage = validations.find(validation => currentData.name === validation.name);\n          getMessage = getMessage.message;\n        } else getMessage = false;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${contextMapper.length % 6 === 0 && currentData.id % 3 === 0 ? \"col-12 col-sm-6 col-mb\" : \"col-12 col-sm-3 col-mb\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"white-box__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentData.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"white-box__info-txt\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: informationData[currentData.name]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this), getMessage && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"has-error\",\n            children: getMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 30\n          }, this)]\n        }, currentData.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InformationCard, \"KtuwwYKmgxrMJKE0eNVyar6liu4=\");\n\n_c = InformationCard;\nexport default InformationCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InformationCard\");","map":{"version":3,"sources":["/home/mutahharahmadpersonal/Development/Gro Pakistan/Current/grocapitalapp-react/src/components/Cards/InformationCard.jsx"],"names":["AppControlContext","useContext","useState","useEffect","validations","updateUser","updatePersonalInformation","updateBusinessInformation","ExperianScore","ExperianAuth","updateUserProfile","SelectSearch","fuzzySearch","states","InformationCard","props","Form","Form2","Form3","informationData","SetInformationData","Birthday","SocialSecurityNumber","DrivingLicense","unvalidated","setUnvalidated","currentEditableId","setCurrentEditableId","contextMapper","data","experianAuthToken","setExperianAuthToken","title","map","currentData","index","getMessage","includes","name","find","validation","message","length","id"],"mappings":"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","sourcesContent":["import { AppControlContext } from \"../../context/AppControlContext\";\nimport { useContext, useState, useEffect } from \"react\";\nimport { validations } from \"./json/validations\";\nimport \"./InformationCard.scss\";\nimport updateUser from \"../../services/Dashboard/updateUser\"\nimport updatePersonalInformation from \"../../services/Dashboard/updatePersonalInformation\";\nimport updateBusinessInformation from \"../../services/Dashboard/updateBusinessInformation\";\nimport ExperianScore from \"../../services/Experian/Score\";\nimport ExperianAuth from \"../../services/Experian/Auth\";\nimport updateUserProfile from \"../../services/Dashboard/updateUserProfile\"\nimport SelectSearch, { fuzzySearch } from \"react-select-search\";\nimport states from \"../Form/json/states\";\n\nconst InformationCard = (props) => {\n  const { Form, Form2, Form3 } = useContext(AppControlContext);\n  const [informationData, SetInformationData] = useState({\n    ...Form,\n    ...Form2,\n    // ...Form3,\n    Birthday: Form3.Birthday,\n    SocialSecurityNumber: Form3.SocialSecurityNumber,\n    DrivingLicense: \"4741121003\",\n    // EIN: \"123456789\",\n    // Experian: \"475/800\",\n  });\n\n  const [unvalidated, setUnvalidated] = useState([]);\n\n  const [currentEditableId, setCurrentEditableId] = useState(0);\n  const contextMapper = props.data;\n  const [experianAuthToken, setExperianAuthToken] = useState(\"\");\n\n  // const selectSearch = (value) => {\n  //   SetInformationData({\n  //     ...informationData,\n  //     State: value,\n  //   });\n  //   let businessInfoObj = {\n  //     \"CorporateName\": informationData.CorporateName,\n  //     \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n  //     \"BusinessAs\": informationData.BusinessAs,\n  //     \"City\": informationData.City,\n  //     \"DUNS\": informationData.DUNS,\n  //     \"SicCode\": informationData.SicCode,\n  //     \"State\": value,\n  //     \"Zip\": informationData.Zip\n  //   }\n  //   const comapany = updateBusinessInformation(Form2)\n  // };\n\n  // const handleInput = (e) => {\n  //   SetInformationData({\n  //     ...informationData,\n  //     [e.target.name]: e.target.value,\n  //   });\n\n  //   const getValidation = validations.find(\n  //     (validation) => e.target.name === validation.name\n  //   );\n  //   if (getValidation.validationRule.test(e.target.value)) {\n  //     if (unvalidated.includes(e.target.name)) {\n  //       const removeIndex = unvalidated.findIndex(\n  //         (current) => current === e.target.name\n  //       );\n  //       let unvalidatedTemp = [...unvalidated];\n  //       unvalidatedTemp.splice(removeIndex, 1);\n  //       setUnvalidated(unvalidatedTemp);\n  //     }\n  //     if (props.title === \"Personal Information\") {\n  //       let personalInfoObj = {\n  //         \"FName\":informationData.FName,\n  //         \"LName\":informationData.LName,\n  //         \"Email\":informationData.Email\n  //       };\n  //     personalInfoObj[e.target.name] = e.target.value\n  //     const user = updateUser(personalInfoObj);\n  //     let personalData = {...Form3};\n  //     personalData[e.target.name] = e.target.value\n  //     const personalInfo = updatePersonalInformation(personalData);\n  //     let userProfileObj = {\n  //       \"DOB\":informationData.DOB,\n  //       \"DrivingLicense\":informationData.DrivingLicense\n  //     };\n  //     const userProfle = updateUserProfile(userProfileObj)\n  //     } \n  //     else if(props.title === \"Company Information\"){\n  //       let businessInfoObj = {\n  //           \"CorporateName\": informationData.CorporateName,\n  //           \"BusinessPhysicalAddress\": informationData.BusinessPhysicalAddress,\n  //           \"BusinessAs\": informationData.BusinessAs,\n  //           \"City\": informationData.City,\n  //           \"DUNS\": informationData.DUNS,\n  //           \"SicCode\": informationData.SicCode,\n  //           \"State\": informationData.State,\n  //           \"Zip\": informationData.Zip\n  //         }\n  //       businessInfoObj[e.target.name] = e.target.value\n  //       const comapany = updateBusinessInformation(businessInfoObj)\n  //       if (e.target.name === 'DUNS'){\n  //         ExperianAuth()\n  //           .then((response) => response.payload.access_token)\n  //           .then((authToken) => setExperianAuthToken(authToken))\n  //           .catch((err) => console.log(err));\n  //         ExperianScore(e.target.value, experianAuthToken)\n  //           .then((response) =>\n  //           SetInformationData({\n  //               ...informationData,\n  //               [e.target.name]: e.target.value,\n  //               Experian: response.payload\n  //                 ? response.payload.results.commercialScore.score + \"/800\"\n  //                 : \"\",\n  //             },\n  //             props.callback(response.payload\n  //                 ? response.payload.results.commercialScore.score + \"/800\"\n  //                 : \"\"))\n  //           )\n  //           .catch((err) => console.error(err));\n  //       }\n  //     }\n  //   } else {\n  //     if (!unvalidated.includes(e.target.name))\n  //       setUnvalidated([...unvalidated, e.target.name]);\n  //   }\n  // };\n  \n\n  return (\n    <div className=\"white-box white-box--mb\">\n      <div className=\"white-box__title\">\n        <h2>{props.title}</h2>\n      </div>\n      <div className=\"row row--mb\">\n        {contextMapper.map((currentData, index) => {\n          let getMessage;\n          if (unvalidated.includes(currentData.name)) {\n            getMessage = validations.find(\n              (validation) => currentData.name === validation.name\n            );\n            getMessage = getMessage.message;\n          } else getMessage = false;\n\n          return (\n            <div\n              className={`${\n                contextMapper.length % 6 === 0 && currentData.id % 3 === 0\n                  ? \"col-12 col-sm-6 col-mb\"\n                  : \"col-12 col-sm-3 col-mb\"\n              }`}\n              key={currentData.id}\n            >\n              <div className=\"white-box__info\">\n                <h3>{currentData.title}</h3>\n                <div className=\"white-box__info-txt\">\n                  {/* {currentEditableId === currentData.id ? \n                  (\n                    <input\n                      value={informationData[currentData.name]}\n                      name={currentData.name}\n                      // onChange={handleInput}\n                      // onKeyDown={(e) => {\n                      //   if (e.key === \"Enter\") {\n                      //     handleInput(e);\n                      //     setCurrentEditableId(!currentEditableId);\n                      //   }\n                      // }}\n                      className=\"custom-amount\"\n                      style={{ color: \"black\" }}\n                    />\n                  ) :( */}\n                  {\n                    <p>{informationData[currentData.name]}</p>\n                  }\n                  {/* { currentData.name !== \"State\" && currentData.name !== \"Experian\" ?\n                    (<span\n                      onClick={() => {\n                        currentData.id === currentEditableId\n                          ? setCurrentEditableId(0)\n                          : setCurrentEditableId(currentData.id);\n                      }}\n                    >\n                      <i\n                        className={\n                          currentData.id === currentEditableId\n                            ? `icon-checked`\n                            : `icon-edit`\n                        }\n                      ></i>\n                    </span>\n                    ) : false} */}\n                </div>\n              </div>\n              {getMessage && <span className=\"has-error\">{getMessage}</span>}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default InformationCard;\n"]},"metadata":{},"sourceType":"module"}