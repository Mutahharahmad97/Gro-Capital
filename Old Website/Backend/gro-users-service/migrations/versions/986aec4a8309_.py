"""empty message

Revision ID: 986aec4a8309
Revises: fce8b4cd3315
Create Date: 2020-03-18 10:57:55.502475

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '986aec4a8309'
down_revision = 'fce8b4cd3315'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('access token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vendor', sa.String(length=256), nullable=False),
    sa.Column('tokenType', sa.String(length=256), nullable=False),
    sa.Column('refreshExpiry', sa.DateTime(), nullable=False),
    sa.Column('accessTokenExpiry', sa.DateTime(), nullable=False),
    sa.Column('accessToken', sa.String(length=256), nullable=False),
    sa.Column('refreshToken', sa.String(length=256), nullable=False),
    sa.Column('idToken', sa.String(length=256), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('company_name', sa.String(length=256), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('email_address', sa.String(), nullable=True),
    sa.Column('company_phone', sa.Integer(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('zipcode', sa.Integer(), nullable=True),
    sa.Column('structure', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('established_date', sa.Date(), nullable=True),
    sa.Column('annual_revenue', sa.Integer(), nullable=True),
    sa.Column('loan_amount_applied', sa.Integer(), nullable=True),
    sa.Column('loan_type', sa.String(), nullable=True),
    sa.Column('loan_reason', sa.String(), nullable=True),
    sa.Column('ein', sa.Integer(), nullable=True),
    sa.Column('duns', sa.Integer(), nullable=True),
    sa.Column('bank_account', sa.String(), nullable=True),
    sa.Column('accounting_account', sa.String(), nullable=True),
    sa.Column('loan_approved', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('rating', sa.String(), nullable=True),
    sa.Column('last_time_rating_fetched', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uid')
    )
    op.create_table('dnbrating',
    sa.Column('duns', sa.Integer(), nullable=True),
    sa.Column('dnb_rate', sa.String(), nullable=True),
    sa.Column('last_pull_time', sa.DateTime(), nullable=True),
    sa.Column('last_pull_date', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('dnb_rate')
    )
    op.create_table('equitis',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.String(), nullable=True),
    sa.Column('name', sa.String(length=256), nullable=True),
    sa.Column('email_address', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('experience', sa.String(), nullable=True),
    sa.Column('industry_understanding', sa.String(), nullable=True),
    sa.Column('external_works', sa.String(), nullable=True),
    sa.Column('anuual_spand', sa.String(), nullable=True),
    sa.Column('market_Structure', sa.String(), nullable=True),
    sa.Column('traction', sa.String(), nullable=True),
    sa.Column('partnership_status', sa.String(), nullable=True),
    sa.Column('idea', sa.String(), nullable=True),
    sa.Column('time_spent_business', sa.String(), nullable=True),
    sa.Column('money_in_business', sa.String(), nullable=True),
    sa.Column('advantage', sa.String(), nullable=True),
    sa.Column('summary', sa.String(), nullable=True),
    sa.Column('profile_pitch_video', sa.String(), nullable=True),
    sa.Column('management_team', sa.String(), nullable=True),
    sa.Column('customer_problems', sa.String(), nullable=True),
    sa.Column('products_services', sa.String(), nullable=True),
    sa.Column('target_market', sa.String(), nullable=True),
    sa.Column('business_model', sa.String(), nullable=True),
    sa.Column('customer_segments', sa.String(), nullable=True),
    sa.Column('strategy', sa.String(), nullable=True),
    sa.Column('competitors', sa.String(), nullable=True),
    sa.Column('competitive_advantage', sa.String(), nullable=True),
    sa.Column('pitch_video', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', 'uid')
    )
    op.create_table('financial',
    sa.Column('duns', sa.Integer(), nullable=True),
    sa.Column('financial_statement_todate', sa.DateTime(), nullable=True),
    sa.Column('currency_iso_alpha3_code', sa.String(), nullable=True),
    sa.Column('fiscalindicator', sa.Boolean(), nullable=False),
    sa.Column('auditindicator', sa.Boolean(), nullable=False),
    sa.Column('financial_statement_fromdate', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('duns')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('gro score',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('data_score', sa.Integer(), nullable=True),
    sa.Column('ml_score', sa.Integer(), nullable=True),
    sa.Column('gro_score', sa.Integer(), nullable=True),
    sa.Column('company_uid', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['company_uid'], ['companies.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inputs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_uid', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('annual_inc', sa.Integer(), nullable=True),
    sa.Column('collections_12_mths_zero', sa.Integer(), nullable=True),
    sa.Column('dti', sa.Float(), nullable=True),
    sa.Column('deling_2yrs', sa.Integer(), nullable=True),
    sa.Column('delinq_2yrs_zero', sa.Boolean(), nullable=True),
    sa.Column('emp_length_num', sa.Integer(), nullable=True),
    sa.Column('home_ownership', sa.String(), nullable=True),
    sa.Column('inq_last_6mths', sa.Integer(), nullable=True),
    sa.Column('last_deling_none', sa.Boolean(), nullable=True),
    sa.Column('last_major_derog_none', sa.Boolean(), nullable=True),
    sa.Column('mths_since_last_delinq', sa.Integer(), nullable=True),
    sa.Column('mths_since_last_record', sa.Integer(), nullable=True),
    sa.Column('mths_since_last_major_derog', sa.Integer(), nullable=True),
    sa.Column('open_acc', sa.Integer(), nullable=True),
    sa.Column('payment_inc_ratio', sa.Float(), nullable=True),
    sa.Column('pub_rec', sa.Integer(), nullable=True),
    sa.Column('pub_rec_zero', sa.Boolean(), nullable=True),
    sa.Column('revolBal', sa.Float(), nullable=True),
    sa.Column('revolUtil', sa.Float(), nullable=True),
    sa.Column('total_acc', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_uid'], ['companies.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles_users',
    sa.Column('admin_user_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['admin_user_id'], ['admin_users.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], )
    )
    op.create_table('stakeholders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('password', sa.String(length=300), nullable=False),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=128), nullable=False),
    sa.Column('username', sa.String(length=128), nullable=True),
    sa.Column('profile', sa.String(), nullable=True),
    sa.Column('first_name', sa.String(length=128), nullable=False),
    sa.Column('last_name', sa.String(length=128), nullable=False),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('driverLicense', sa.String(length=10), nullable=False),
    sa.Column('ssn', sa.Integer(), nullable=False),
    sa.Column('company', sa.String(), nullable=True),
    sa.Column('facebook_uid', sa.String(), nullable=True),
    sa.Column('facebook_access_token', sa.String(), nullable=True),
    sa.Column('linkedin_access_token', sa.String(), nullable=True),
    sa.Column('google_uid', sa.String(), nullable=True),
    sa.Column('google_access_token', sa.String(), nullable=True),
    sa.Column('plaid_access_token', sa.String(), nullable=True),
    sa.Column('quickbook_access_token', sa.String(), nullable=True),
    sa.Column('quickbook_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('dl_front', sa.String(), nullable=True),
    sa.Column('dl_back', sa.String(), nullable=True),
    sa.Column('last_step', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company'], ['companies.uid'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dl_back'),
    sa.UniqueConstraint('dl_front'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('balance__sheet',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('report_name', sa.String(), nullable=False),
    sa.Column('startPeriod', sa.Date(), nullable=True),
    sa.Column('endPeriod', sa.Date(), nullable=True),
    sa.Column('current_asset', sa.Float(), nullable=True),
    sa.Column('fixed_asset', sa.Float(), nullable=True),
    sa.Column('current_liability', sa.Float(), nullable=True),
    sa.Column('longterm_liability', sa.Float(), nullable=True),
    sa.Column('equity', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('account_id', sa.String(), nullable=False),
    sa.Column('account_type', sa.String(), nullable=False),
    sa.Column('account_number', sa.Numeric(), nullable=False),
    sa.Column('routing_number', sa.Numeric(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cash__flow',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('report_name', sa.String(), nullable=False),
    sa.Column('startPeriod', sa.Date(), nullable=True),
    sa.Column('endPeriod', sa.Date(), nullable=True),
    sa.Column('beginningCash', sa.Float(), nullable=True),
    sa.Column('endingCash', sa.Float(), nullable=True),
    sa.Column('operatingNetCash', sa.Float(), nullable=True),
    sa.Column('investingNetCash', sa.Float(), nullable=True),
    sa.Column('financingNetCash', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('profit__loss',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('report_name', sa.String(), nullable=False),
    sa.Column('startPeriod', sa.Date(), nullable=True),
    sa.Column('endPeriod', sa.Date(), nullable=True),
    sa.Column('income', sa.Float(), nullable=True),
    sa.Column('COGS', sa.Float(), nullable=True),
    sa.Column('grossProfit', sa.Float(), nullable=True),
    sa.Column('expenses', sa.Float(), nullable=True),
    sa.Column('netOperatingIncome', sa.Float(), nullable=True),
    sa.Column('otherExpenses', sa.Float(), nullable=True),
    sa.Column('netOtherIncome', sa.Float(), nullable=True),
    sa.Column('netIncome', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('daily_transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('bank_account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('bank_account_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bank_account_id'], ['bank_accounts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('transactions')
    op.drop_table('daily_transactions')
    op.drop_table('profit__loss')
    op.drop_table('documents')
    op.drop_table('cash__flow')
    op.drop_table('bank_accounts')
    op.drop_table('balance__sheet')
    op.drop_table('users')
    op.drop_table('stakeholders')
    op.drop_table('roles_users')
    op.drop_table('inputs')
    op.drop_table('gro score')
    op.drop_table('role')
    op.drop_table('financial')
    op.drop_table('equitis')
    op.drop_table('dnbrating')
    op.drop_table('companies')
    op.drop_table('admin_users')
    op.drop_table('access token')
    # ### end Alembic commands ###
